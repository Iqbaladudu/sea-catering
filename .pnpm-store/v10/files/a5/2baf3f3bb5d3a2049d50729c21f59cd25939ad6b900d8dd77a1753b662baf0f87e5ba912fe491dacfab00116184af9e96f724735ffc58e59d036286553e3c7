{"version":3,"file":"index.js","names":["React","useCallback","useMemo","RenderCustomComponent","FieldDescription","FieldError","useForm","useField","withCondition","useEditDepth","generateFieldID","mergeFieldStyles","fieldBaseClass","CheckboxInput","baseClass","CheckboxFieldComponent","props","id","checked","checkedFromProps","disableFormData","field","admin","className","description","label","required","onChange","onChangeFromProps","partialChecked","path","pathFromProps","readOnly","validate","uuid","editDepth","memoizedValidate","value","options","customComponents","AfterInput","BeforeInput","Description","Error","Label","disabled","setValue","showError","potentiallyStalePath","onToggle","Boolean","fieldID","styles","_jsxs","filter","join","style","_jsx","CustomComponent","Fallback","inputRef","name","CheckboxField"],"sources":["../../../src/fields/Checkbox/index.tsx"],"sourcesContent":["'use client'\nimport type {\n  CheckboxFieldClientComponent,\n  CheckboxFieldClientProps,\n  CheckboxFieldValidation,\n} from 'payload'\n\nimport React, { useCallback, useMemo } from 'react'\n\nimport type { CheckboxInputProps } from './Input.js'\n\nimport { RenderCustomComponent } from '../../elements/RenderCustomComponent/index.js'\nimport { FieldDescription } from '../../fields/FieldDescription/index.js'\nimport { FieldError } from '../../fields/FieldError/index.js'\nimport { useForm } from '../../forms/Form/context.js'\nimport { useField } from '../../forms/useField/index.js'\nimport { withCondition } from '../../forms/withCondition/index.js'\nimport { useEditDepth } from '../../providers/EditDepth/index.js'\nimport { generateFieldID } from '../../utilities/generateFieldID.js'\nimport { mergeFieldStyles } from '../mergeFieldStyles.js'\nimport { fieldBaseClass } from '../shared/index.js'\nimport { CheckboxInput } from './Input.js'\nimport './index.scss'\n\nconst baseClass = 'checkbox'\n\nexport { CheckboxFieldClientProps, CheckboxInput, type CheckboxInputProps }\n\nconst CheckboxFieldComponent: CheckboxFieldClientComponent = (props) => {\n  const {\n    id,\n    checked: checkedFromProps,\n    disableFormData,\n    field,\n    field: {\n      admin: { className, description } = {} as CheckboxFieldClientProps['field']['admin'],\n      label,\n      required,\n    } = {} as CheckboxFieldClientProps['field'],\n    onChange: onChangeFromProps,\n    partialChecked,\n    path: pathFromProps,\n    readOnly,\n    validate,\n  } = props\n\n  const { uuid } = useForm()\n\n  const editDepth = useEditDepth()\n\n  const memoizedValidate: CheckboxFieldValidation = useCallback(\n    (value, options) => {\n      if (typeof validate === 'function') {\n        return validate(value, { ...options, required })\n      }\n    },\n    [validate, required],\n  )\n\n  const {\n    customComponents: { AfterInput, BeforeInput, Description, Error, Label } = {},\n    disabled,\n    path,\n    setValue,\n    showError,\n    value,\n  } = useField({\n    disableFormData,\n    potentiallyStalePath: pathFromProps,\n    validate: memoizedValidate,\n  })\n\n  const onToggle = useCallback(() => {\n    if (!readOnly) {\n      setValue(!value)\n      if (typeof onChangeFromProps === 'function') {\n        onChangeFromProps(!value)\n      }\n    }\n  }, [onChangeFromProps, readOnly, setValue, value])\n\n  const checked = checkedFromProps || Boolean(value)\n\n  const fieldID = id || generateFieldID(path, editDepth, uuid)\n\n  const styles = useMemo(() => mergeFieldStyles(field), [field])\n\n  return (\n    <div\n      className={[\n        fieldBaseClass,\n        baseClass,\n        showError && 'error',\n        className,\n        value && `${baseClass}--checked`,\n        (readOnly || disabled) && `${baseClass}--read-only`,\n      ]\n        .filter(Boolean)\n        .join(' ')}\n      style={styles}\n    >\n      <RenderCustomComponent\n        CustomComponent={Error}\n        Fallback={<FieldError path={path} showError={showError} />}\n      />\n      <CheckboxInput\n        AfterInput={AfterInput}\n        BeforeInput={BeforeInput}\n        checked={checked}\n        id={fieldID}\n        inputRef={null}\n        Label={Label}\n        label={label}\n        name={path}\n        onToggle={onToggle}\n        partialChecked={partialChecked}\n        readOnly={readOnly || disabled}\n        required={required}\n      />\n      <RenderCustomComponent\n        CustomComponent={Description}\n        Fallback={<FieldDescription description={description} path={path} />}\n      />\n    </div>\n  )\n}\n\nexport const CheckboxField = withCondition(CheckboxFieldComponent)\n"],"mappings":"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","ignoreList":[]}