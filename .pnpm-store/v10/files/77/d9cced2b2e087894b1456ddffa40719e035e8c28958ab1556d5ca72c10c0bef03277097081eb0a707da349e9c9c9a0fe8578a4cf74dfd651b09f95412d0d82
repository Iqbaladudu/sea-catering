{"version":3,"file":"index.js","names":["c","_c","ShimmerEffect","useAllFormFields","useDocumentEvents","useLocale","reduceFieldsToValues","React","useEffect","useLivePreviewContext","DeviceContainer","IFrame","LivePreviewToolbar","baseClass","LivePreview","props","$","appIsReady","iframeHasLoaded","iframeRef","popupRef","previewWindowType","setIframeHasLoaded","url","locale","mostRecentUpdate","breakpoint","fieldSchemaJSON","prevWindowType","useRef","undefined","fields","t0","window","values","shouldSendSchema","current","message","type","data","externallyUpdatedRelationship","code","postMessage","contentWindow","t1","t2","message_0","t3","t4","t5","filter","Boolean","t6","join","t7","_jsx","className","children","_jsxs","ref","height"],"sources":["../../../../src/views/LivePreview/Preview/index.tsx"],"sourcesContent":["'use client'\n\nimport type { EditViewProps } from 'payload'\n\nimport { ShimmerEffect, useAllFormFields, useDocumentEvents, useLocale } from '@payloadcms/ui'\nimport { reduceFieldsToValues } from 'payload/shared'\nimport React, { useEffect } from 'react'\n\nimport { useLivePreviewContext } from '../Context/context.js'\nimport { DeviceContainer } from '../Device/index.js'\nimport { IFrame } from '../IFrame/index.js'\nimport { LivePreviewToolbar } from '../Toolbar/index.js'\nimport './index.scss'\n\nconst baseClass = 'live-preview-window'\n\nexport const LivePreview: React.FC<EditViewProps> = (props) => {\n  const {\n    appIsReady,\n    iframeHasLoaded,\n    iframeRef,\n    popupRef,\n    previewWindowType,\n    setIframeHasLoaded,\n    url,\n  } = useLivePreviewContext()\n\n  const locale = useLocale()\n\n  const { mostRecentUpdate } = useDocumentEvents()\n\n  const { breakpoint, fieldSchemaJSON } = useLivePreviewContext()\n\n  const prevWindowType =\n    React.useRef<ReturnType<typeof useLivePreviewContext>['previewWindowType']>(undefined)\n\n  const [fields] = useAllFormFields()\n\n  // For client-side apps, send data through `window.postMessage`\n  // The preview could either be an iframe embedded on the page\n  // Or it could be a separate popup window\n  // We need to transmit data to both accordingly\n  useEffect(() => {\n    // For performance, do no reduce fields to values until after the iframe or popup has loaded\n    if (fields && window && 'postMessage' in window && appIsReady) {\n      const values = reduceFieldsToValues(fields, true)\n\n      // To reduce on large `postMessage` payloads, only send `fieldSchemaToJSON` one time\n      // To do this, the underlying JS function maintains a cache of this value\n      // So we need to send it through each time the window type changes\n      // But only once per window type change, not on every render, because this is a potentially large obj\n      const shouldSendSchema =\n        !prevWindowType.current || prevWindowType.current !== previewWindowType\n\n      prevWindowType.current = previewWindowType\n\n      const message = {\n        type: 'payload-live-preview',\n        data: values,\n        externallyUpdatedRelationship: mostRecentUpdate,\n        fieldSchemaJSON: shouldSendSchema ? fieldSchemaJSON : undefined,\n        locale: locale.code,\n      }\n\n      // Post message to external popup window\n      if (previewWindowType === 'popup' && popupRef.current) {\n        popupRef.current.postMessage(message, url)\n      }\n\n      // Post message to embedded iframe\n      if (previewWindowType === 'iframe' && iframeRef.current) {\n        iframeRef.current.contentWindow?.postMessage(message, url)\n      }\n    }\n  }, [\n    fields,\n    url,\n    iframeHasLoaded,\n    previewWindowType,\n    popupRef,\n    appIsReady,\n    iframeRef,\n    setIframeHasLoaded,\n    fieldSchemaJSON,\n    mostRecentUpdate,\n    locale,\n  ])\n\n  // To support SSR, we transmit a `window.postMessage` event without a payload\n  // This is because the event will ultimately trigger a server-side roundtrip\n  // i.e., save, save draft, autosave, etc. will fire `router.refresh()`\n  useEffect(() => {\n    const message = {\n      type: 'payload-document-event',\n    }\n\n    // Post message to external popup window\n    if (previewWindowType === 'popup' && popupRef.current) {\n      popupRef.current.postMessage(message, url)\n    }\n\n    // Post message to embedded iframe\n    if (previewWindowType === 'iframe' && iframeRef.current) {\n      iframeRef.current.contentWindow?.postMessage(message, url)\n    }\n  }, [mostRecentUpdate, iframeRef, popupRef, previewWindowType, url])\n\n  if (previewWindowType === 'iframe') {\n    return (\n      <div\n        className={[\n          baseClass,\n          breakpoint && breakpoint !== 'responsive' && `${baseClass}--has-breakpoint`,\n        ]\n          .filter(Boolean)\n          .join(' ')}\n      >\n        <div className={`${baseClass}__wrapper`}>\n          <LivePreviewToolbar {...props} />\n          <div className={`${baseClass}__main`}>\n            <DeviceContainer>\n              {url ? (\n                <IFrame ref={iframeRef} setIframeHasLoaded={setIframeHasLoaded} url={url} />\n              ) : (\n                <ShimmerEffect height=\"100%\" />\n              )}\n            </DeviceContainer>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n"],"mappings":"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","ignoreList":[]}