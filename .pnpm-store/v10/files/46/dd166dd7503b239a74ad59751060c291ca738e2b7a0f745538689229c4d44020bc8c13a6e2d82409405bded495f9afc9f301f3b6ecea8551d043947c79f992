{"version":3,"file":"index.js","names":["DocumentInfoProvider","EditDepthProvider","HydrateAuthProvider","RenderServerComponent","isEditing","getIsEditing","buildFormState","notFound","redirect","logError","formatAdminURL","React","DocumentHeader","NotFoundView","getDocPreferences","getDocumentData","getDocumentPermissions","getDocumentView","getIsLocked","getMetaBySegment","getVersions","renderDocumentSlots","generateMetadata","args","renderDocument","disableActions","documentSubViewType","drawerSlug","importMap","initialData","initPageResult","overrideEntityVisibility","params","redirectAfterCreate","redirectAfterDelete","redirectAfterDuplicate","searchParams","versions","viewType","collectionConfig","docID","idFromArgs","globalConfig","locale","permissions","req","i18n","payload","config","routes","admin","adminRoute","api","apiRoute","serverURL","user","visibleEntities","segments","Array","isArray","collectionSlug","slug","undefined","globalSlug","id","doc","Error","docPreferences","docPermissions","hasPublishPermission","hasSavePermission","currentEditor","isLocked","lastUpdateTime","Promise","all","data","hasPublishedDoc","mostRecentVersionIsAutosaved","unpublishedVersionCount","versionCount","state","formState","code","fallbackLocale","operation","renderAllFields","schemaPath","skipValidation","documentViewServerProps","routeSegments","collections","find","visibleSlug","globals","formattedParams","URLSearchParams","drafts","append","apiQueryParams","toString","apiURL","View","showHeader","RootViewOverride","components","views","edit","root","Component","shouldAutosave","autosave","validateDraftData","validate","create","collection","depth","draft","redirectURL","path","documentSlots","clientProps","Document","_jsxs","initialState","_jsx","serverProps","props","RenderedDocument","error","message","err"],"sources":["../../../src/views/Document/index.tsx"],"sourcesContent":["import type {\n  AdminViewServerProps,\n  Data,\n  DocumentViewClientProps,\n  DocumentViewServerProps,\n  DocumentViewServerPropsOnly,\n  EditViewComponent,\n  PayloadComponent,\n  RenderDocumentVersionsProperties,\n} from 'payload'\n\nimport { DocumentInfoProvider, EditDepthProvider, HydrateAuthProvider } from '@payloadcms/ui'\nimport { RenderServerComponent } from '@payloadcms/ui/elements/RenderServerComponent'\nimport { isEditing as getIsEditing } from '@payloadcms/ui/shared'\nimport { buildFormState } from '@payloadcms/ui/utilities/buildFormState'\nimport { notFound, redirect } from 'next/navigation.js'\nimport { logError } from 'payload'\nimport { formatAdminURL } from 'payload/shared'\nimport React from 'react'\n\nimport type { GenerateEditViewMetadata } from './getMetaBySegment.js'\n\nimport { DocumentHeader } from '../../elements/DocumentHeader/index.js'\nimport { NotFoundView } from '../NotFound/index.js'\nimport { getDocPreferences } from './getDocPreferences.js'\nimport { getDocumentData } from './getDocumentData.js'\nimport { getDocumentPermissions } from './getDocumentPermissions.js'\nimport { getDocumentView } from './getDocumentView.js'\nimport { getIsLocked } from './getIsLocked.js'\nimport { getMetaBySegment } from './getMetaBySegment.js'\nimport { getVersions } from './getVersions.js'\nimport { renderDocumentSlots } from './renderDocumentSlots.js'\n\nexport const generateMetadata: GenerateEditViewMetadata = async (args) => getMetaBySegment(args)\n\nexport type ViewToRender =\n  | EditViewComponent\n  | PayloadComponent<DocumentViewServerProps>\n  | React.FC\n  | React.FC<DocumentViewClientProps>\n\n/**\n * This function is responsible for rendering\n * an Edit Document view on the server for both:\n *  - default document edit views\n *  - on-demand edit views within drawers\n */\nexport const renderDocument = async ({\n  disableActions,\n  documentSubViewType,\n  drawerSlug,\n  importMap,\n  initialData,\n  initPageResult,\n  overrideEntityVisibility,\n  params,\n  redirectAfterCreate,\n  redirectAfterDelete,\n  redirectAfterDuplicate,\n  searchParams,\n  versions,\n  viewType,\n}: {\n  drawerSlug?: string\n  overrideEntityVisibility?: boolean\n  readonly redirectAfterCreate?: boolean\n  readonly redirectAfterDelete?: boolean\n  readonly redirectAfterDuplicate?: boolean\n  versions?: RenderDocumentVersionsProperties\n} & AdminViewServerProps): Promise<{\n  data: Data\n  Document: React.ReactNode\n}> => {\n  const {\n    collectionConfig,\n    docID: idFromArgs,\n    globalConfig,\n    locale,\n    permissions,\n    req,\n    req: {\n      i18n,\n      payload,\n      payload: {\n        config,\n        config: {\n          routes: { admin: adminRoute, api: apiRoute },\n          serverURL,\n        },\n      },\n      user,\n    },\n    visibleEntities,\n  } = initPageResult\n\n  const segments = Array.isArray(params?.segments) ? params.segments : []\n  const collectionSlug = collectionConfig?.slug || undefined\n  const globalSlug = globalConfig?.slug || undefined\n  let isEditing = getIsEditing({ id: idFromArgs, collectionSlug, globalSlug })\n\n  // Fetch the doc required for the view\n  let doc =\n    initialData ||\n    (await getDocumentData({\n      id: idFromArgs,\n      collectionSlug,\n      globalSlug,\n      locale,\n      payload,\n      req,\n      user,\n    }))\n\n  if (isEditing && !doc) {\n    throw new Error('not-found')\n  }\n\n  const [\n    docPreferences,\n    { docPermissions, hasPublishPermission, hasSavePermission },\n    { currentEditor, isLocked, lastUpdateTime },\n  ] = await Promise.all([\n    // Get document preferences\n    getDocPreferences({\n      id: idFromArgs,\n      collectionSlug,\n      globalSlug,\n      payload,\n      user,\n    }),\n\n    // Get permissions\n    getDocumentPermissions({\n      id: idFromArgs,\n      collectionConfig,\n      data: doc,\n      globalConfig,\n      req,\n    }),\n\n    // Fetch document lock state\n    getIsLocked({\n      id: idFromArgs,\n      collectionConfig,\n      globalConfig,\n      isEditing,\n      req,\n    }),\n  ])\n\n  const [\n    { hasPublishedDoc, mostRecentVersionIsAutosaved, unpublishedVersionCount, versionCount },\n    { state: formState },\n  ] = await Promise.all([\n    getVersions({\n      id: idFromArgs,\n      collectionConfig,\n      doc,\n      docPermissions,\n      globalConfig,\n      locale: locale?.code,\n      payload,\n      user,\n    }),\n    buildFormState({\n      id: idFromArgs,\n      collectionSlug,\n      data: doc,\n      docPermissions,\n      docPreferences,\n      fallbackLocale: false,\n      globalSlug,\n      locale: locale?.code,\n      operation: (collectionSlug && idFromArgs) || globalSlug ? 'update' : 'create',\n      renderAllFields: true,\n      req,\n      schemaPath: collectionSlug || globalSlug,\n      skipValidation: true,\n    }),\n  ])\n\n  const documentViewServerProps: DocumentViewServerPropsOnly = {\n    doc,\n    hasPublishedDoc,\n    i18n,\n    initPageResult,\n    locale,\n    params,\n    payload,\n    permissions,\n    routeSegments: segments,\n    searchParams,\n    user,\n    versions,\n  }\n\n  if (\n    !overrideEntityVisibility &&\n    ((collectionSlug &&\n      !visibleEntities?.collections?.find((visibleSlug) => visibleSlug === collectionSlug)) ||\n      (globalSlug && !visibleEntities?.globals?.find((visibleSlug) => visibleSlug === globalSlug)))\n  ) {\n    throw new Error('not-found')\n  }\n\n  const formattedParams = new URLSearchParams()\n\n  if (collectionConfig?.versions?.drafts || globalConfig?.versions?.drafts) {\n    formattedParams.append('draft', 'true')\n  }\n\n  if (locale?.code) {\n    formattedParams.append('locale', locale.code)\n  }\n\n  const apiQueryParams = `?${formattedParams.toString()}`\n\n  const apiURL = collectionSlug\n    ? `${serverURL}${apiRoute}/${collectionSlug}/${idFromArgs}${apiQueryParams}`\n    : globalSlug\n      ? `${serverURL}${apiRoute}/${globalSlug}${apiQueryParams}`\n      : ''\n\n  let View: ViewToRender = null\n\n  let showHeader = true\n\n  const RootViewOverride =\n    collectionConfig?.admin?.components?.views?.edit?.root &&\n    'Component' in collectionConfig.admin.components.views.edit.root\n      ? collectionConfig?.admin?.components?.views?.edit?.root?.Component\n      : globalConfig?.admin?.components?.views?.edit?.root &&\n          'Component' in globalConfig.admin.components.views.edit.root\n        ? globalConfig?.admin?.components?.views?.edit?.root?.Component\n        : null\n\n  if (RootViewOverride) {\n    View = RootViewOverride\n    showHeader = false\n  } else {\n    ;({ View } = getDocumentView({\n      collectionConfig,\n      config,\n      docPermissions,\n      globalConfig,\n      routeSegments: segments,\n    }))\n  }\n\n  if (!View) {\n    View = NotFoundView\n  }\n\n  /**\n   * Handle case where autoSave is enabled and the document is being created\n   * => create document and redirect\n   */\n  const shouldAutosave =\n    hasSavePermission &&\n    ((collectionConfig?.versions?.drafts && collectionConfig?.versions?.drafts?.autosave) ||\n      (globalConfig?.versions?.drafts && globalConfig?.versions?.drafts?.autosave))\n\n  const validateDraftData =\n    collectionConfig?.versions?.drafts && collectionConfig?.versions?.drafts?.validate\n\n  let id = idFromArgs\n\n  if (shouldAutosave && !validateDraftData && !idFromArgs && collectionSlug) {\n    doc = await payload.create({\n      collection: collectionSlug,\n      data: initialData || {},\n      depth: 0,\n      draft: true,\n      fallbackLocale: false,\n      locale: locale?.code,\n      req,\n      user,\n    })\n\n    if (doc?.id) {\n      id = doc.id\n      isEditing = getIsEditing({ id: doc.id, collectionSlug, globalSlug })\n\n      if (!drawerSlug && redirectAfterCreate !== false) {\n        const redirectURL = formatAdminURL({\n          adminRoute,\n          path: `/collections/${collectionSlug}/${doc.id}`,\n          serverURL,\n        })\n\n        redirect(redirectURL)\n      }\n    } else {\n      throw new Error('not-found')\n    }\n  }\n\n  const documentSlots = renderDocumentSlots({\n    collectionConfig,\n    globalConfig,\n    hasSavePermission,\n    permissions: docPermissions,\n    req,\n  })\n\n  const clientProps: DocumentViewClientProps = {\n    formState,\n    ...documentSlots,\n    documentSubViewType,\n    viewType,\n  }\n\n  return {\n    data: doc,\n    Document: (\n      <DocumentInfoProvider\n        apiURL={apiURL}\n        collectionSlug={collectionConfig?.slug}\n        currentEditor={currentEditor}\n        disableActions={disableActions ?? false}\n        docPermissions={docPermissions}\n        globalSlug={globalConfig?.slug}\n        hasPublishedDoc={hasPublishedDoc}\n        hasPublishPermission={hasPublishPermission}\n        hasSavePermission={hasSavePermission}\n        id={id}\n        initialData={doc}\n        initialState={formState}\n        isEditing={isEditing}\n        isLocked={isLocked}\n        key={locale?.code}\n        lastUpdateTime={lastUpdateTime}\n        mostRecentVersionIsAutosaved={mostRecentVersionIsAutosaved}\n        redirectAfterCreate={redirectAfterCreate}\n        redirectAfterDelete={redirectAfterDelete}\n        redirectAfterDuplicate={redirectAfterDuplicate}\n        unpublishedVersionCount={unpublishedVersionCount}\n        versionCount={versionCount}\n      >\n        {showHeader && !drawerSlug && (\n          <DocumentHeader\n            collectionConfig={collectionConfig}\n            globalConfig={globalConfig}\n            i18n={i18n}\n            payload={payload}\n            permissions={permissions}\n          />\n        )}\n        <HydrateAuthProvider permissions={permissions} />\n        <EditDepthProvider>\n          {RenderServerComponent({\n            clientProps,\n            Component: View,\n            importMap,\n            serverProps: documentViewServerProps,\n          })}\n        </EditDepthProvider>\n      </DocumentInfoProvider>\n    ),\n  }\n}\n\nexport async function Document(props: AdminViewServerProps) {\n  try {\n    const { Document: RenderedDocument } = await renderDocument(props)\n    return RenderedDocument\n  } catch (error) {\n    if (error?.message === 'NEXT_REDIRECT') {\n      throw error\n    }\n\n    logError({ err: error, payload: props.initPageResult.req.payload })\n\n    if (error.message === 'not-found') {\n      notFound()\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]}