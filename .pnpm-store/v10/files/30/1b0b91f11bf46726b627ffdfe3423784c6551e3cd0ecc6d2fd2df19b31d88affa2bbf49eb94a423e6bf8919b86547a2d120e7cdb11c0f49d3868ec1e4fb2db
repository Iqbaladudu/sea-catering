{"version":3,"file":"index.client.js","names":["c","_c","DocumentControls","DocumentFields","DocumentLocked","DocumentTakeOver","Form","LeaveWithoutSaving","OperationProvider","SetDocumentStepNav","SetDocumentTitle","useAuth","useConfig","useDocumentDrawerContext","useDocumentEvents","useDocumentInfo","useEditDepth","useRouteTransition","useServerFunctions","useTranslation","useUploadEdits","abortAndIgnore","handleAbortRef","handleBackToDashboard","handleGoBack","handleTakeOver","useRouter","useSearchParams","formatAdminURL","React","Fragment","useCallback","useEffect","useRef","useState","useLivePreviewContext","LivePreviewProvider","LivePreview","usePopupWindow","baseClass","getAbsoluteUrl","url","URL","window","location","origin","href","PreviewView","BeforeDocumentControls","collectionConfig","config","Description","EditMenuItems","fields","globalConfig","PreviewButton","PublishButton","SaveButton","SaveDraftButton","schemaPath","id","action","AfterDocument","AfterFields","apiURL","BeforeFields","collectionSlug","currentEditor","disableActions","disableLeaveWithoutSaving","docPermissions","documentIsLocked","getDocPermissions","getDocPreferences","globalSlug","hasPublishPermission","hasSavePermission","incrementVersionCount","initialData","initialState","isEditing","isInitializing","lastUpdateTime","setCurrentEditor","setDocumentIsLocked","unlockDocument","updateDocumentEditor","updateSavedDocumentData","onSave","onSaveFromContext","operation","admin","user","userSlug","routes","adminRoute","router","params","locale","get","t","previewWindowType","refreshCookieAsync","reportUpdate","resetUploadEdits","getFormState","startRouteTransition","docConfig","entitySlug","slug","depth","lockDocumentsProp","lockDocuments","undefined","isLockingEnabled","lockDurationDefault","lockDuration","duration","lockDurationInMilliseconds","autosaveEnabled","Boolean","versions","drafts","autosave","preventLeaveWithoutSaving","isReadOnlyForIncomingUser","setIsReadOnlyForIncomingUser","showTakeOverModal","setShowTakeOverModal","abortOnChangeRef","abortOnSaveRef","editSessionStartTime","setEditSessionStartTime","Date","now","lockExpiryTime","isLockExpired","documentLockStateRef","hasShownLockedModal","isLocked","json","controller","updatedAt","result","toISOString","doc","redirectRoute","path","push","docPreferences","state","data","renderAllFields","returnLockStatus","signal","skipValidation","current","onChange","formState","prevFormState","submitted","currentTime","timeSinceLastUpdate","updateLastEdited","lockedState","previousOwnerID","lockedUserID","currentPath","pathname","documentID","stayWithinDocumentPaths","isStayingWithinDocument","some","includes","abortOnChange","abortOnSave","shouldShowDocumentLockedModal","_jsx","_jsxs","className","disabled","method","onSuccess","isActive","onReadOnly","onTakeOver","globalLabel","label","pluralLabel","labels","plural","useAsTitle","view","fallback","toString","customComponents","permissions","readOnlyForIncomingUser","filter","join","forceSidebarWrap","readOnly","schemaPathSegments","LivePreviewClient","props","$","breakpoints","incomingUrl","t0","getEntityConfig","t1","serverURL","api","apiRoute","t2","startsWith","t3","eventType","isPopupOpen","openPopupWindow","popupRef","t4","Upload","children","fieldSchema"],"sources":["../../../src/views/LivePreview/index.client.tsx"],"sourcesContent":["'use client'\nimport type { FormProps } from '@payloadcms/ui'\nimport type {\n  ClientCollectionConfig,\n  ClientConfig,\n  ClientField,\n  ClientGlobalConfig,\n  ClientUser,\n  Data,\n  DocumentSlots,\n  FormState,\n  LivePreviewConfig,\n} from 'payload'\n\nimport {\n  DocumentControls,\n  DocumentFields,\n  DocumentLocked,\n  DocumentTakeOver,\n  Form,\n  LeaveWithoutSaving,\n  OperationProvider,\n  SetDocumentStepNav,\n  SetDocumentTitle,\n  useAuth,\n  useConfig,\n  useDocumentDrawerContext,\n  useDocumentEvents,\n  useDocumentInfo,\n  useEditDepth,\n  useRouteTransition,\n  useServerFunctions,\n  useTranslation,\n  useUploadEdits,\n} from '@payloadcms/ui'\nimport {\n  abortAndIgnore,\n  handleAbortRef,\n  handleBackToDashboard,\n  handleGoBack,\n  handleTakeOver,\n} from '@payloadcms/ui/shared'\nimport { useRouter, useSearchParams } from 'next/navigation.js'\nimport { formatAdminURL } from 'payload/shared'\nimport React, { Fragment, useCallback, useEffect, useRef, useState } from 'react'\n\nimport { useLivePreviewContext } from './Context/context.js'\nimport './index.scss'\nimport { LivePreviewProvider } from './Context/index.js'\nimport { LivePreview } from './Preview/index.js'\nimport { usePopupWindow } from './usePopupWindow.js'\n\nconst baseClass = 'live-preview'\n\ntype Props = {\n  readonly apiRoute: string\n  readonly collectionConfig?: ClientCollectionConfig\n  readonly config: ClientConfig\n  readonly fields: ClientField[]\n  readonly globalConfig?: ClientGlobalConfig\n  readonly schemaPath: string\n  readonly serverURL: string\n} & DocumentSlots\n\nconst getAbsoluteUrl = (url) => {\n  try {\n    return new URL(url, window.location.origin).href\n  } catch {\n    return url\n  }\n}\n\nconst PreviewView: React.FC<Props> = ({\n  BeforeDocumentControls,\n  collectionConfig,\n  config,\n  Description,\n  EditMenuItems,\n  fields,\n  globalConfig,\n  PreviewButton,\n  PublishButton,\n  SaveButton,\n  SaveDraftButton,\n  schemaPath,\n}) => {\n  const {\n    id,\n    action,\n    AfterDocument,\n    AfterFields,\n    apiURL,\n    BeforeFields,\n    collectionSlug,\n    currentEditor,\n    disableActions,\n    disableLeaveWithoutSaving,\n    docPermissions,\n    documentIsLocked,\n    getDocPermissions,\n    getDocPreferences,\n    globalSlug,\n    hasPublishPermission,\n    hasSavePermission,\n    incrementVersionCount,\n    initialData,\n    initialState,\n    isEditing,\n    isInitializing,\n    lastUpdateTime,\n    setCurrentEditor,\n    setDocumentIsLocked,\n    unlockDocument,\n    updateDocumentEditor,\n    updateSavedDocumentData,\n  } = useDocumentInfo()\n\n  const { onSave: onSaveFromContext } = useDocumentDrawerContext()\n\n  const operation = id ? 'update' : 'create'\n\n  const {\n    config: {\n      admin: { user: userSlug },\n      routes: { admin: adminRoute },\n    },\n  } = useConfig()\n  const router = useRouter()\n  const params = useSearchParams()\n  const locale = params.get('locale')\n  const { t } = useTranslation()\n  const { previewWindowType } = useLivePreviewContext()\n  const { refreshCookieAsync, user } = useAuth()\n  const { reportUpdate } = useDocumentEvents()\n  const { resetUploadEdits } = useUploadEdits()\n  const { getFormState } = useServerFunctions()\n  const { startRouteTransition } = useRouteTransition()\n\n  const docConfig = collectionConfig || globalConfig\n\n  const entitySlug = collectionConfig?.slug || globalConfig?.slug\n\n  const depth = useEditDepth()\n\n  const lockDocumentsProp = docConfig?.lockDocuments !== undefined ? docConfig?.lockDocuments : true\n  const isLockingEnabled = lockDocumentsProp !== false\n\n  const lockDurationDefault = 300 // Default 5 minutes in seconds\n  const lockDuration =\n    typeof lockDocumentsProp === 'object' ? lockDocumentsProp.duration : lockDurationDefault\n  const lockDurationInMilliseconds = lockDuration * 1000\n\n  const autosaveEnabled = Boolean(\n    (collectionConfig?.versions?.drafts && collectionConfig?.versions?.drafts?.autosave) ||\n      (globalConfig?.versions?.drafts && globalConfig?.versions?.drafts?.autosave),\n  )\n\n  const preventLeaveWithoutSaving =\n    typeof disableLeaveWithoutSaving !== 'undefined' ? !disableLeaveWithoutSaving : !autosaveEnabled\n\n  const [isReadOnlyForIncomingUser, setIsReadOnlyForIncomingUser] = useState(false)\n  const [showTakeOverModal, setShowTakeOverModal] = useState(false)\n\n  const abortOnChangeRef = useRef<AbortController>(null)\n  const abortOnSaveRef = useRef<AbortController>(null)\n\n  const [editSessionStartTime, setEditSessionStartTime] = useState(Date.now())\n\n  const lockExpiryTime = lastUpdateTime + lockDurationInMilliseconds\n\n  const isLockExpired = Date.now() > lockExpiryTime\n\n  const documentLockStateRef = useRef<{\n    hasShownLockedModal: boolean\n    isLocked: boolean\n    user: ClientUser | number | string\n  } | null>({\n    hasShownLockedModal: false,\n    isLocked: false,\n    user: null,\n  })\n\n  const onSave = useCallback(\n    async (json): Promise<FormState> => {\n      const controller = handleAbortRef(abortOnSaveRef)\n\n      reportUpdate({\n        id,\n        entitySlug,\n        updatedAt: json?.result?.updatedAt || new Date().toISOString(),\n      })\n\n      // If we're editing the doc of the logged-in user,\n      // Refresh the cookie to get new permissions\n      if (user && collectionSlug === userSlug && id === user.id) {\n        void refreshCookieAsync()\n      }\n\n      incrementVersionCount()\n\n      if (typeof updateSavedDocumentData === 'function') {\n        void updateSavedDocumentData(json?.doc || {})\n      }\n\n      if (typeof onSaveFromContext === 'function') {\n        void onSaveFromContext({\n          ...json,\n          operation: id ? 'update' : 'create',\n        })\n      }\n\n      if (!isEditing && depth < 2) {\n        // Redirect to the same locale if it's been set\n        const redirectRoute = formatAdminURL({\n          adminRoute,\n          path: `/collections/${collectionSlug}/${json?.doc?.id}${locale ? `?locale=${locale}` : ''}`,\n        })\n\n        startRouteTransition(() => router.push(redirectRoute))\n      } else {\n        resetUploadEdits()\n      }\n\n      await getDocPermissions(json)\n\n      if ((id || globalSlug) && !autosaveEnabled) {\n        const docPreferences = await getDocPreferences()\n\n        const { state } = await getFormState({\n          id,\n          collectionSlug,\n          data: json?.doc || json?.result,\n          docPermissions,\n          docPreferences,\n          globalSlug,\n          operation,\n          renderAllFields: true,\n          returnLockStatus: false,\n          schemaPath: entitySlug,\n          signal: controller.signal,\n          skipValidation: true,\n        })\n\n        // Unlock the document after save\n        if (isLockingEnabled) {\n          setDocumentIsLocked(false)\n        }\n\n        abortOnSaveRef.current = null\n\n        return state\n      }\n    },\n    [\n      adminRoute,\n      collectionSlug,\n      depth,\n      docPermissions,\n      entitySlug,\n      getDocPermissions,\n      getDocPreferences,\n      getFormState,\n      globalSlug,\n      id,\n      incrementVersionCount,\n      isEditing,\n      isLockingEnabled,\n      locale,\n      onSaveFromContext,\n      operation,\n      refreshCookieAsync,\n      reportUpdate,\n      resetUploadEdits,\n      router,\n      setDocumentIsLocked,\n      updateSavedDocumentData,\n      startRouteTransition,\n      user,\n      userSlug,\n      autosaveEnabled,\n    ],\n  )\n\n  const onChange: FormProps['onChange'][0] = useCallback(\n    async ({ formState: prevFormState, submitted }) => {\n      const controller = handleAbortRef(abortOnChangeRef)\n\n      const currentTime = Date.now()\n      const timeSinceLastUpdate = currentTime - editSessionStartTime\n\n      const updateLastEdited = isLockingEnabled && timeSinceLastUpdate >= 10000 // 10 seconds\n\n      if (updateLastEdited) {\n        setEditSessionStartTime(currentTime)\n      }\n\n      const docPreferences = await getDocPreferences()\n\n      const { lockedState, state } = await getFormState({\n        id,\n        collectionSlug,\n        docPermissions,\n        docPreferences,\n        formState: prevFormState,\n        globalSlug,\n        operation,\n        returnLockStatus: isLockingEnabled ? true : false,\n        schemaPath,\n        signal: controller.signal,\n        skipValidation: !submitted,\n        updateLastEdited,\n      })\n\n      setDocumentIsLocked(true)\n\n      if (isLockingEnabled) {\n        const previousOwnerID =\n          typeof documentLockStateRef.current?.user === 'object'\n            ? documentLockStateRef.current?.user?.id\n            : documentLockStateRef.current?.user\n\n        if (lockedState) {\n          const lockedUserID =\n            typeof lockedState.user === 'string' || typeof lockedState.user === 'number'\n              ? lockedState.user\n              : lockedState.user.id\n\n          if (!documentLockStateRef.current || lockedUserID !== previousOwnerID) {\n            if (previousOwnerID === user.id && lockedUserID !== user.id) {\n              setShowTakeOverModal(true)\n              documentLockStateRef.current.hasShownLockedModal = true\n            }\n\n            documentLockStateRef.current = documentLockStateRef.current = {\n              hasShownLockedModal: documentLockStateRef.current?.hasShownLockedModal || false,\n              isLocked: true,\n              user: lockedState.user as ClientUser,\n            }\n\n            setCurrentEditor(lockedState.user as ClientUser)\n          }\n        }\n      }\n\n      abortOnChangeRef.current = null\n\n      return state\n    },\n    [\n      editSessionStartTime,\n      isLockingEnabled,\n      getDocPreferences,\n      getFormState,\n      id,\n      collectionSlug,\n      docPermissions,\n      globalSlug,\n      operation,\n      schemaPath,\n      setDocumentIsLocked,\n      user?.id,\n      setCurrentEditor,\n    ],\n  )\n\n  // Clean up when the component unmounts or when the document is unlocked\n  useEffect(() => {\n    return () => {\n      if (!isLockingEnabled) {\n        return\n      }\n\n      const currentPath = window.location.pathname\n\n      const documentID = id || globalSlug\n\n      // Routes where we do NOT want to unlock the document\n      const stayWithinDocumentPaths = ['preview', 'api', 'versions']\n\n      const isStayingWithinDocument = stayWithinDocumentPaths.some((path) =>\n        currentPath.includes(path),\n      )\n\n      // Unlock the document only if we're actually navigating away from the document\n      if (documentID && documentIsLocked && !isStayingWithinDocument) {\n        // Check if this user is still the current editor\n        if (\n          typeof documentLockStateRef.current?.user === 'object'\n            ? documentLockStateRef.current?.user?.id === user?.id\n            : documentLockStateRef.current?.user === user?.id\n        ) {\n          void unlockDocument(id, collectionSlug ?? globalSlug)\n          setDocumentIsLocked(false)\n          setCurrentEditor(null)\n        }\n      }\n\n      setShowTakeOverModal(false)\n    }\n  }, [\n    collectionSlug,\n    globalSlug,\n    id,\n    unlockDocument,\n    user,\n    setCurrentEditor,\n    isLockingEnabled,\n    documentIsLocked,\n    setDocumentIsLocked,\n  ])\n\n  useEffect(() => {\n    const abortOnChange = abortOnChangeRef.current\n    const abortOnSave = abortOnSaveRef.current\n\n    return () => {\n      abortAndIgnore(abortOnChange)\n      abortAndIgnore(abortOnSave)\n    }\n  })\n\n  const shouldShowDocumentLockedModal =\n    documentIsLocked &&\n    currentEditor &&\n    (typeof currentEditor === 'object'\n      ? currentEditor.id !== user?.id\n      : currentEditor !== user?.id) &&\n    !isReadOnlyForIncomingUser &&\n    !showTakeOverModal &&\n    // eslint-disable-next-line react-compiler/react-compiler\n    !documentLockStateRef.current?.hasShownLockedModal &&\n    !isLockExpired\n\n  return (\n    <OperationProvider operation={operation}>\n      <Form\n        action={action}\n        className={`${baseClass}__form`}\n        disabled={isReadOnlyForIncomingUser || !hasSavePermission}\n        initialState={initialState}\n        isInitializing={isInitializing}\n        method={id ? 'PATCH' : 'POST'}\n        onChange={[onChange]}\n        onSuccess={onSave}\n      >\n        {isLockingEnabled && shouldShowDocumentLockedModal && !isReadOnlyForIncomingUser && (\n          <DocumentLocked\n            handleGoBack={() => handleGoBack({ adminRoute, collectionSlug, router })}\n            isActive={shouldShowDocumentLockedModal}\n            onReadOnly={() => {\n              setIsReadOnlyForIncomingUser(true)\n              setShowTakeOverModal(false)\n            }}\n            onTakeOver={() =>\n              handleTakeOver(\n                id,\n                collectionSlug,\n                globalSlug,\n                user,\n                false,\n                updateDocumentEditor,\n                setCurrentEditor,\n                documentLockStateRef,\n                isLockingEnabled,\n              )\n            }\n            updatedAt={lastUpdateTime}\n            user={currentEditor}\n          />\n        )}\n        {isLockingEnabled && showTakeOverModal && (\n          <DocumentTakeOver\n            handleBackToDashboard={() => handleBackToDashboard({ adminRoute, router })}\n            isActive={showTakeOverModal}\n            onReadOnly={() => {\n              setIsReadOnlyForIncomingUser(true)\n              setShowTakeOverModal(false)\n            }}\n          />\n        )}\n        {!isReadOnlyForIncomingUser && preventLeaveWithoutSaving && <LeaveWithoutSaving />}\n        <SetDocumentStepNav\n          collectionSlug={collectionSlug}\n          globalLabel={globalConfig?.label}\n          globalSlug={globalSlug}\n          id={id}\n          pluralLabel={collectionConfig ? collectionConfig?.labels?.plural : undefined}\n          useAsTitle={collectionConfig ? collectionConfig?.admin?.useAsTitle : undefined}\n          view={t('general:livePreview')}\n        />\n        <SetDocumentTitle\n          collectionConfig={collectionConfig}\n          config={config}\n          fallback={id?.toString() || ''}\n          globalConfig={globalConfig}\n        />\n        <DocumentControls\n          apiURL={apiURL}\n          BeforeDocumentControls={BeforeDocumentControls}\n          customComponents={{\n            PreviewButton,\n            PublishButton,\n            SaveButton,\n            SaveDraftButton,\n          }}\n          data={initialData}\n          disableActions={disableActions}\n          EditMenuItems={EditMenuItems}\n          hasPublishPermission={hasPublishPermission}\n          hasSavePermission={hasSavePermission}\n          id={id}\n          isEditing={isEditing}\n          onTakeOver={() =>\n            handleTakeOver(\n              id,\n              collectionSlug,\n              globalSlug,\n              user,\n              true,\n              updateDocumentEditor,\n              setCurrentEditor,\n              documentLockStateRef,\n              isLockingEnabled,\n              setIsReadOnlyForIncomingUser,\n            )\n          }\n          permissions={docPermissions}\n          readOnlyForIncomingUser={isReadOnlyForIncomingUser}\n          slug={collectionConfig?.slug || globalConfig?.slug}\n          user={currentEditor}\n        />\n        <div\n          className={[baseClass, previewWindowType === 'popup' && `${baseClass}--detached`]\n            .filter(Boolean)\n            .join(' ')}\n        >\n          <div\n            className={[\n              `${baseClass}__main`,\n              previewWindowType === 'popup' && `${baseClass}__main--popup-open`,\n            ]\n              .filter(Boolean)\n              .join(' ')}\n          >\n            <DocumentFields\n              AfterFields={AfterFields}\n              BeforeFields={BeforeFields}\n              Description={Description}\n              docPermissions={docPermissions}\n              fields={fields}\n              forceSidebarWrap\n              readOnly={isReadOnlyForIncomingUser || !hasSavePermission}\n              schemaPathSegments={[collectionSlug || globalSlug]}\n            />\n            {AfterDocument}\n          </div>\n          <LivePreview collectionSlug={collectionSlug} globalSlug={globalSlug} />\n        </div>\n      </Form>\n    </OperationProvider>\n  )\n}\n\nexport const LivePreviewClient: React.FC<\n  {\n    readonly breakpoints: LivePreviewConfig['breakpoints']\n    readonly initialData: Data\n    readonly url: string\n  } & DocumentSlots\n> = (props) => {\n  const { breakpoints, url: incomingUrl } = props\n  const { collectionSlug, globalSlug } = useDocumentInfo()\n\n  const {\n    config,\n    config: {\n      routes: { api: apiRoute },\n      serverURL,\n    },\n    getEntityConfig,\n  } = useConfig()\n\n  const url =\n    incomingUrl.startsWith('http://') || incomingUrl.startsWith('https://')\n      ? incomingUrl\n      : getAbsoluteUrl(incomingUrl)\n\n  const { isPopupOpen, openPopupWindow, popupRef } = usePopupWindow({\n    eventType: 'payload-live-preview',\n    url,\n  })\n\n  const collectionConfig = getEntityConfig({ collectionSlug })\n\n  const globalConfig = getEntityConfig({ globalSlug })\n\n  const schemaPath = collectionSlug || globalSlug\n\n  return (\n    <Fragment>\n      <LivePreviewProvider\n        breakpoints={breakpoints}\n        fieldSchema={collectionConfig?.fields || globalConfig?.fields}\n        isPopupOpen={isPopupOpen}\n        openPopupWindow={openPopupWindow}\n        popupRef={popupRef}\n        url={url}\n      >\n        <PreviewView\n          apiRoute={apiRoute}\n          BeforeDocumentControls={props.BeforeDocumentControls}\n          collectionConfig={collectionConfig}\n          config={config}\n          Description={props.Description}\n          EditMenuItems={props.EditMenuItems}\n          fields={(collectionConfig || globalConfig)?.fields}\n          globalConfig={globalConfig}\n          PreviewButton={props.PreviewButton}\n          PublishButton={props.PublishButton}\n          SaveButton={props.SaveButton}\n          SaveDraftButton={props.SaveDraftButton}\n          schemaPath={schemaPath}\n          serverURL={serverURL}\n          Upload={props.Upload}\n        />\n      </LivePreviewProvider>\n    </Fragment>\n  )\n}\n"],"mappings":"AAAA;;AAAA,SAAAA,CAAA,IAAAC,EAAA;;AAcA,SACEC,gBAAgB,EAChBC,cAAc,EACdC,cAAc,EACdC,gBAAgB,EAChBC,IAAI,EACJC,kBAAkB,EAClBC,iBAAiB,EACjBC,kBAAkB,EAClBC,gBAAgB,EAChBC,OAAO,EACPC,SAAS,EACTC,wBAAwB,EACxBC,iBAAiB,EACjBC,eAAe,EACfC,YAAY,EACZC,kBAAkB,EAClBC,kBAAkB,EAClBC,cAAc,EACdC,cAAc,QACT;AACP,SACEC,cAAc,EACdC,cAAc,EACdC,qBAAqB,EACrBC,YAAY,EACZC,cAAc,QACT;AACP,SAASC,SAAS,EAAEC,eAAe,QAAQ;AAC3C,SAASC,cAAc,QAAQ;AAC/B,OAAOC,KAAA,IAASC,QAAQ,EAAEC,WAAW,EAAEC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ;AAE1E,SAASC,qBAAqB,QAAQ;AAEtC,SAASC,mBAAmB,QAAQ;AACpC,SAASC,WAAW,QAAQ;AAC5B,SAASC,cAAc,QAAQ;AAE/B,MAAMC,SAAA,GAAY;AAYlB,MAAMC,cAAA,GAAkBC,GAAA;EACtB,IAAI;IACF,OAAO,IAAIC,GAAA,CAAID,GAAA,EAAKE,MAAA,CAAOC,QAAQ,CAACC,MAAM,EAAEC,IAAI;EAClD,EAAE,MAAM;IACN,OAAOL,GAAA;EACT;AACF;AAEA,MAAMM,WAAA,GAA+BA,CAAC;EACpCC,sBAAsB;EACtBC,gBAAgB;EAChBC,MAAM;EACNC,WAAW;EACXC,aAAa;EACbC,MAAM;EACNC,YAAY;EACZC,aAAa;EACbC,aAAa;EACbC,UAAU;EACVC,eAAe;EACfC;AAAU,CACX;EACC,MAAM;IACJC,EAAE;IACFC,MAAM;IACNC,aAAa;IACbC,WAAW;IACXC,MAAM;IACNC,YAAY;IACZC,cAAc;IACdC,aAAa;IACbC,cAAc;IACdC,yBAAyB;IACzBC,cAAc;IACdC,gBAAgB;IAChBC,iBAAiB;IACjBC,iBAAiB;IACjBC,UAAU;IACVC,oBAAoB;IACpBC,iBAAiB;IACjBC,qBAAqB;IACrBC,WAAW;IACXC,YAAY;IACZC,SAAS;IACTC,cAAc;IACdC,cAAc;IACdC,gBAAgB;IAChBC,mBAAmB;IACnBC,cAAc;IACdC,oBAAoB;IACpBC;EAAuB,CACxB,GAAGxE,eAAA;EAEJ,MAAM;IAAEyE,MAAA,EAAQC;EAAiB,CAAE,GAAG5E,wBAAA;EAEtC,MAAM6E,SAAA,GAAY9B,EAAA,GAAK,WAAW;EAElC,MAAM;IACJV,MAAA,EAAQ;MACNyC,KAAA,EAAO;QAAEC,IAAA,EAAMC;MAAQ,CAAE;MACzBC,MAAA,EAAQ;QAAEH,KAAA,EAAOI;MAAU;IAAE;EAC9B,CACF,GAAGnF,SAAA;EACJ,MAAMoF,MAAA,GAAStE,SAAA;EACf,MAAMuE,MAAA,GAAStE,eAAA;EACf,MAAMuE,MAAA,GAASD,MAAA,CAAOE,GAAG,CAAC;EAC1B,MAAM;IAAEC;EAAC,CAAE,GAAGjF,cAAA;EACd,MAAM;IAAEkF;EAAiB,CAAE,GAAGlE,qBAAA;EAC9B,MAAM;IAAEmE,kBAAkB;IAAEV;EAAI,CAAE,GAAGjF,OAAA;EACrC,MAAM;IAAE4F;EAAY,CAAE,GAAGzF,iBAAA;EACzB,MAAM;IAAE0F;EAAgB,CAAE,GAAGpF,cAAA;EAC7B,MAAM;IAAEqF;EAAY,CAAE,GAAGvF,kBAAA;EACzB,MAAM;IAAEwF;EAAoB,CAAE,GAAGzF,kBAAA;EAEjC,MAAM0F,SAAA,GAAY1D,gBAAA,IAAoBK,YAAA;EAEtC,MAAMsD,UAAA,GAAa3D,gBAAA,EAAkB4D,IAAA,IAAQvD,YAAA,EAAcuD,IAAA;EAE3D,MAAMC,KAAA,GAAQ9F,YAAA;EAEd,MAAM+F,iBAAA,GAAoBJ,SAAA,EAAWK,aAAA,KAAkBC,SAAA,GAAYN,SAAA,EAAWK,aAAA,GAAgB;EAC9F,MAAME,gBAAA,GAAmBH,iBAAA,KAAsB;EAE/C,MAAMI,mBAAA,GAAsB,IAAI;EAAA;EAChC,MAAMC,YAAA,GACJ,OAAOL,iBAAA,KAAsB,WAAWA,iBAAA,CAAkBM,QAAQ,GAAGF,mBAAA;EACvE,MAAMG,0BAAA,GAA6BF,YAAA,GAAe;EAElD,MAAMG,eAAA,GAAkBC,OAAA,CACtBvE,gBAAC,EAAkBwE,QAAA,EAAUC,MAAA,IAAUzE,gBAAA,EAAkBwE,QAAA,EAAUC,MAAA,EAAQC,QAAA,IACxErE,YAAA,EAAcmE,QAAA,EAAUC,MAAA,IAAUpE,YAAA,EAAcmE,QAAA,EAAUC,MAAA,EAAQC,QAAA;EAGvE,MAAMC,yBAAA,GACJ,OAAOvD,yBAAA,KAA8B,cAAc,CAACA,yBAAA,GAA4B,CAACkD,eAAA;EAEnF,MAAM,CAACM,yBAAA,EAA2BC,4BAAA,CAA6B,GAAG5F,QAAA,CAAS;EAC3E,MAAM,CAAC6F,iBAAA,EAAmBC,oBAAA,CAAqB,GAAG9F,QAAA,CAAS;EAE3D,MAAM+F,gBAAA,GAAmBhG,MAAA,CAAwB;EACjD,MAAMiG,cAAA,GAAiBjG,MAAA,CAAwB;EAE/C,MAAM,CAACkG,oBAAA,EAAsBC,uBAAA,CAAwB,GAAGlG,QAAA,CAASmG,IAAA,CAAKC,GAAG;EAEzE,MAAMC,cAAA,GAAiBrD,cAAA,GAAiBoC,0BAAA;EAExC,MAAMkB,aAAA,GAAgBH,IAAA,CAAKC,GAAG,KAAKC,cAAA;EAEnC,MAAME,oBAAA,GAAuBxG,MAAA,CAInB;IACRyG,mBAAA,EAAqB;IACrBC,QAAA,EAAU;IACV/C,IAAA,EAAM;EACR;EAEA,MAAMJ,MAAA,GAASzD,WAAA,CACb,MAAO6G,IAAA;IACL,MAAMC,UAAA,GAAavH,cAAA,CAAe4G,cAAA;IAElC3B,YAAA,CAAa;MACX3C,EAAA;MACAgD,UAAA;MACAkC,SAAA,EAAWF,IAAA,EAAMG,MAAA,EAAQD,SAAA,IAAa,IAAIT,IAAA,GAAOW,WAAW;IAC9D;IAEA;IACA;IACA,IAAIpD,IAAA,IAAQ1B,cAAA,KAAmB2B,QAAA,IAAYjC,EAAA,KAAOgC,IAAA,CAAKhC,EAAE,EAAE;MACzD,KAAK0C,kBAAA;IACP;IAEAzB,qBAAA;IAEA,IAAI,OAAOU,uBAAA,KAA4B,YAAY;MACjD,KAAKA,uBAAA,CAAwBqD,IAAA,EAAMK,GAAA,IAAO,CAAC;IAC7C;IAEA,IAAI,OAAOxD,iBAAA,KAAsB,YAAY;MAC3C,KAAKA,iBAAA,CAAkB;QACrB,GAAGmD,IAAI;QACPlD,SAAA,EAAW9B,EAAA,GAAK,WAAW;MAC7B;IACF;IAEA,IAAI,CAACoB,SAAA,IAAa8B,KAAA,GAAQ,GAAG;MAC3B;MACA,MAAMoC,aAAA,GAAgBtH,cAAA,CAAe;QACnCmE,UAAA;QACAoD,IAAA,EAAM,gBAAgBjF,cAAA,IAAkB0E,IAAA,EAAMK,GAAA,EAAKrF,EAAA,GAAKsC,MAAA,GAAS,WAAWA,MAAA,EAAQ,GAAG;MACzF;MAEAQ,oBAAA,CAAqB,MAAMV,MAAA,CAAOoD,IAAI,CAACF,aAAA;IACzC,OAAO;MACL1C,gBAAA;IACF;IAEA,MAAMhC,iBAAA,CAAkBoE,IAAA;IAExB,IAAI,CAAChF,EAAA,IAAMc,UAAS,KAAM,CAAC6C,eAAA,EAAiB;MAC1C,MAAM8B,cAAA,GAAiB,MAAM5E,iBAAA;MAE7B,MAAM;QAAE6E;MAAK,CAAE,GAAG,MAAM7C,YAAA,CAAa;QACnC7C,EAAA;QACAM,cAAA;QACAqF,IAAA,EAAMX,IAAA,EAAMK,GAAA,IAAOL,IAAA,EAAMG,MAAA;QACzBzE,cAAA;QACA+E,cAAA;QACA3E,UAAA;QACAgB,SAAA;QACA8D,eAAA,EAAiB;QACjBC,gBAAA,EAAkB;QAClB9F,UAAA,EAAYiD,UAAA;QACZ8C,MAAA,EAAQb,UAAA,CAAWa,MAAM;QACzBC,cAAA,EAAgB;MAClB;MAEA;MACA,IAAIzC,gBAAA,EAAkB;QACpB9B,mBAAA,CAAoB;MACtB;MAEA8C,cAAA,CAAe0B,OAAO,GAAG;MAEzB,OAAON,KAAA;IACT;EACF,GACA,CACEvD,UAAA,EACA7B,cAAA,EACA4C,KAAA,EACAxC,cAAA,EACAsC,UAAA,EACApC,iBAAA,EACAC,iBAAA,EACAgC,YAAA,EACA/B,UAAA,EACAd,EAAA,EACAiB,qBAAA,EACAG,SAAA,EACAkC,gBAAA,EACAhB,MAAA,EACAT,iBAAA,EACAC,SAAA,EACAY,kBAAA,EACAC,YAAA,EACAC,gBAAA,EACAR,MAAA,EACAZ,mBAAA,EACAG,uBAAA,EACAmB,oBAAA,EACAd,IAAA,EACAC,QAAA,EACA0B,eAAA,CACD;EAGH,MAAMsC,QAAA,GAAqC9H,WAAA,CACzC,OAAO;IAAE+H,SAAA,EAAWC,aAAa;IAAEC;EAAS,CAAE;IAC5C,MAAMnB,YAAA,GAAavH,cAAA,CAAe2G,gBAAA;IAElC,MAAMgC,WAAA,GAAc5B,IAAA,CAAKC,GAAG;IAC5B,MAAM4B,mBAAA,GAAsBD,WAAA,GAAc9B,oBAAA;IAE1C,MAAMgC,gBAAA,GAAmBjD,gBAAA,IAAoBgD,mBAAA,IAAuB,MAAM;IAAA;IAE1E,IAAIC,gBAAA,EAAkB;MACpB/B,uBAAA,CAAwB6B,WAAA;IAC1B;IAEA,MAAMZ,gBAAA,GAAiB,MAAM5E,iBAAA;IAE7B,MAAM;MAAE2F,WAAW;MAAEd,KAAK,EAALA;IAAK,CAAE,GAAG,MAAM7C,YAAA,CAAa;MAChD7C,EAAA;MACAM,cAAA;MACAI,cAAA;MACA+E,cAAA,EAAAA,gBAAA;MACAS,SAAA,EAAWC,aAAA;MACXrF,UAAA;MACAgB,SAAA;MACA+D,gBAAA,EAAkBvC,gBAAA,GAAmB,OAAO;MAC5CvD,UAAA;MACA+F,MAAA,EAAQb,YAAA,CAAWa,MAAM;MACzBC,cAAA,EAAgB,CAACK,SAAA;MACjBG;IACF;IAEA/E,mBAAA,CAAoB;IAEpB,IAAI8B,gBAAA,EAAkB;MACpB,MAAMmD,eAAA,GACJ,OAAO5B,oBAAA,CAAqBmB,OAAO,EAAEhE,IAAA,KAAS,WAC1C6C,oBAAA,CAAqBmB,OAAO,EAAEhE,IAAA,EAAMhC,EAAA,GACpC6E,oBAAA,CAAqBmB,OAAO,EAAEhE,IAAA;MAEpC,IAAIwE,WAAA,EAAa;QACf,MAAME,YAAA,GACJ,OAAOF,WAAA,CAAYxE,IAAI,KAAK,YAAY,OAAOwE,WAAA,CAAYxE,IAAI,KAAK,WAChEwE,WAAA,CAAYxE,IAAI,GAChBwE,WAAA,CAAYxE,IAAI,CAAChC,EAAE;QAEzB,IAAI,CAAC6E,oBAAA,CAAqBmB,OAAO,IAAIU,YAAA,KAAiBD,eAAA,EAAiB;UACrE,IAAIA,eAAA,KAAoBzE,IAAA,CAAKhC,EAAE,IAAI0G,YAAA,KAAiB1E,IAAA,CAAKhC,EAAE,EAAE;YAC3DoE,oBAAA,CAAqB;YACrBS,oBAAA,CAAqBmB,OAAO,CAAClB,mBAAmB,GAAG;UACrD;UAEAD,oBAAA,CAAqBmB,OAAO,GAAGnB,oBAAA,CAAqBmB,OAAO,GAAG;YAC5DlB,mBAAA,EAAqBD,oBAAA,CAAqBmB,OAAO,EAAElB,mBAAA,IAAuB;YAC1EC,QAAA,EAAU;YACV/C,IAAA,EAAMwE,WAAA,CAAYxE;UACpB;UAEAT,gBAAA,CAAiBiF,WAAA,CAAYxE,IAAI;QACnC;MACF;IACF;IAEAqC,gBAAA,CAAiB2B,OAAO,GAAG;IAE3B,OAAON,OAAA;EACT,GACA,CACEnB,oBAAA,EACAjB,gBAAA,EACAzC,iBAAA,EACAgC,YAAA,EACA7C,EAAA,EACAM,cAAA,EACAI,cAAA,EACAI,UAAA,EACAgB,SAAA,EACA/B,UAAA,EACAyB,mBAAA,EACAQ,IAAA,EAAMhC,EAAA,EACNuB,gBAAA,CACD;EAGH;EACAnD,SAAA,CAAU;IACR,OAAO;MACL,IAAI,CAACkF,gBAAA,EAAkB;QACrB;MACF;MAEA,MAAMqD,WAAA,GAAc5H,MAAA,CAAOC,QAAQ,CAAC4H,QAAQ;MAE5C,MAAMC,UAAA,GAAa7G,EAAA,IAAMc,UAAA;MAEzB;MACA,MAAMgG,uBAAA,GAA0B,CAAC,WAAW,OAAO,WAAW;MAE9D,MAAMC,uBAAA,GAA0BD,uBAAA,CAAwBE,IAAI,CAAEzB,IAAA,IAC5DoB,WAAA,CAAYM,QAAQ,CAAC1B,IAAA;MAGvB;MACA,IAAIsB,UAAA,IAAclG,gBAAA,IAAoB,CAACoG,uBAAA,EAAyB;QAC9D;QACA,IACE,OAAOlC,oBAAA,CAAqBmB,OAAO,EAAEhE,IAAA,KAAS,WAC1C6C,oBAAA,CAAqBmB,OAAO,EAAEhE,IAAA,EAAMhC,EAAA,KAAOgC,IAAA,EAAMhC,EAAA,GACjD6E,oBAAA,CAAqBmB,OAAO,EAAEhE,IAAA,KAASA,IAAA,EAAMhC,EAAA,EACjD;UACA,KAAKyB,cAAA,CAAezB,EAAA,EAAIM,cAAA,IAAkBQ,UAAA;UAC1CU,mBAAA,CAAoB;UACpBD,gBAAA,CAAiB;QACnB;MACF;MAEA6C,oBAAA,CAAqB;IACvB;EACF,GAAG,CACD9D,cAAA,EACAQ,UAAA,EACAd,EAAA,EACAyB,cAAA,EACAO,IAAA,EACAT,gBAAA,EACA+B,gBAAA,EACA3C,gBAAA,EACAa,mBAAA,CACD;EAEDpD,SAAA,CAAU;IACR,MAAM8I,aAAA,GAAgB7C,gBAAA,CAAiB2B,OAAO;IAC9C,MAAMmB,WAAA,GAAc7C,cAAA,CAAe0B,OAAO;IAE1C,OAAO;MACLvI,cAAA,CAAeyJ,aAAA;MACfzJ,cAAA,CAAe0J,WAAA;IACjB;EACF;EAEA,MAAMC,6BAAA,GACJzG,gBAAA,IACAJ,aAAA,KACC,OAAOA,aAAA,KAAkB,WACtBA,aAAA,CAAcP,EAAE,KAAKgC,IAAA,EAAMhC,EAAA,GAC3BO,aAAA,KAAkByB,IAAA,EAAMhC,EAAC,KAC7B,CAACiE,yBAAA,IACD,CAACE,iBAAA;EACD;EACA,CAACU,oBAAA,CAAqBmB,OAAO,EAAElB,mBAAA,IAC/B,CAACF,aAAA;EAEH,oBACEyC,IAAA,CAACzK,iBAAA;IAAkBkF,SAAA,EAAWA,SAAA;cAC5B,aAAAwF,KAAA,CAAC5K,IAAA;MACCuD,MAAA,EAAQA,MAAA;MACRsH,SAAA,EAAW,GAAG5I,SAAA,QAAiB;MAC/B6I,QAAA,EAAUvD,yBAAA,IAA6B,CAACjD,iBAAA;MACxCG,YAAA,EAAcA,YAAA;MACdE,cAAA,EAAgBA,cAAA;MAChBoG,MAAA,EAAQzH,EAAA,GAAK,UAAU;MACvBiG,QAAA,EAAU,CAACA,QAAA,CAAS;MACpByB,SAAA,EAAW9F,MAAA;iBAEV0B,gBAAA,IAAoB8D,6BAAA,IAAiC,CAACnD,yBAAA,iBACrDoD,IAAA,CAAC7K,cAAA;QACCoB,YAAA,EAAcA,CAAA,KAAMA,YAAA,CAAa;UAAEuE,UAAA;UAAY7B,cAAA;UAAgB8B;QAAO;QACtEuF,QAAA,EAAUP,6BAAA;QACVQ,UAAA,EAAYA,CAAA;UACV1D,4BAAA,CAA6B;UAC7BE,oBAAA,CAAqB;QACvB;QACAyD,UAAA,EAAYA,CAAA,KACVhK,cAAA,CACEmC,EAAA,EACAM,cAAA,EACAQ,UAAA,EACAkB,IAAA,EACA,OACAN,oBAAA,EACAH,gBAAA,EACAsD,oBAAA,EACAvB,gBAAA;QAGJ4B,SAAA,EAAW5D,cAAA;QACXU,IAAA,EAAMzB;UAGT+C,gBAAA,IAAoBa,iBAAA,iBACnBkD,IAAA,CAAC5K,gBAAA;QACCkB,qBAAA,EAAuBA,CAAA,KAAMA,qBAAA,CAAsB;UAAEwE,UAAA;UAAYC;QAAO;QACxEuF,QAAA,EAAUxD,iBAAA;QACVyD,UAAA,EAAYA,CAAA;UACV1D,4BAAA,CAA6B;UAC7BE,oBAAA,CAAqB;QACvB;UAGH,CAACH,yBAAA,IAA6BD,yBAAA,iBAA6BqD,IAAA,CAAC1K,kBAAA,O,aAC7D0K,IAAA,CAACxK,kBAAA;QACCyD,cAAA,EAAgBA,cAAA;QAChBwH,WAAA,EAAapI,YAAA,EAAcqI,KAAA;QAC3BjH,UAAA,EAAYA,UAAA;QACZd,EAAA,EAAIA,EAAA;QACJgI,WAAA,EAAa3I,gBAAA,GAAmBA,gBAAA,EAAkB4I,MAAA,EAAQC,MAAA,GAAS7E,SAAA;QACnE8E,UAAA,EAAY9I,gBAAA,GAAmBA,gBAAA,EAAkB0C,KAAA,EAAOoG,UAAA,GAAa9E,SAAA;QACrE+E,IAAA,EAAM5F,CAAA,CAAE;uBAEV6E,IAAA,CAACvK,gBAAA;QACCuC,gBAAA,EAAkBA,gBAAA;QAClBC,MAAA,EAAQA,MAAA;QACR+I,QAAA,EAAUrI,EAAA,EAAIsI,QAAA,MAAc;QAC5B5I,YAAA,EAAcA;uBAEhB2H,IAAA,CAAC/K,gBAAA;QACC8D,MAAA,EAAQA,MAAA;QACRhB,sBAAA,EAAwBA,sBAAA;QACxBmJ,gBAAA,EAAkB;UAChB5I,aAAA;UACAC,aAAA;UACAC,UAAA;UACAC;QACF;QACA6F,IAAA,EAAMzE,WAAA;QACNV,cAAA,EAAgBA,cAAA;QAChBhB,aAAA,EAAeA,aAAA;QACfuB,oBAAA,EAAsBA,oBAAA;QACtBC,iBAAA,EAAmBA,iBAAA;QACnBhB,EAAA,EAAIA,EAAA;QACJoB,SAAA,EAAWA,SAAA;QACXyG,UAAA,EAAYA,CAAA,KACVhK,cAAA,CACEmC,EAAA,EACAM,cAAA,EACAQ,UAAA,EACAkB,IAAA,EACA,MACAN,oBAAA,EACAH,gBAAA,EACAsD,oBAAA,EACAvB,gBAAA,EACAY,4BAAA;QAGJsE,WAAA,EAAa9H,cAAA;QACb+H,uBAAA,EAAyBxE,yBAAA;QACzBhB,IAAA,EAAM5D,gBAAA,EAAkB4D,IAAA,IAAQvD,YAAA,EAAcuD,IAAA;QAC9CjB,IAAA,EAAMzB;uBAER+G,KAAA,CAAC;QACCC,SAAA,EAAW,CAAC5I,SAAA,EAAW8D,iBAAA,KAAsB,WAAW,GAAG9D,SAAA,YAAqB,CAAC,CAC9E+J,MAAM,CAAC9E,OAAA,EACP+E,IAAI,CAAC;gCAERrB,KAAA,CAAC;UACCC,SAAA,EAAW,CACT,GAAG5I,SAAA,QAAiB,EACpB8D,iBAAA,KAAsB,WAAW,GAAG9D,SAAA,oBAA6B,CAClE,CACE+J,MAAM,CAAC9E,OAAA,EACP+E,IAAI,CAAC;kCAERtB,IAAA,CAAC9K,cAAA;YACC4D,WAAA,EAAaA,WAAA;YACbE,YAAA,EAAcA,YAAA;YACdd,WAAA,EAAaA,WAAA;YACbmB,cAAA,EAAgBA,cAAA;YAChBjB,MAAA,EAAQA,MAAA;YACRmJ,gBAAgB;YAChBC,QAAA,EAAU5E,yBAAA,IAA6B,CAACjD,iBAAA;YACxC8H,kBAAA,EAAoB,CAACxI,cAAA,IAAkBQ,UAAA;cAExCZ,aAAA;yBAEHmH,IAAA,CAAC5I,WAAA;UAAY6B,cAAA,EAAgBA,cAAA;UAAgBQ,UAAA,EAAYA;;;;;AAKnE;AAEA,OAAO,MAAMiI,iBAAA,GAMTC,KAAA;EAAA,MAAAC,CAAA,GAAA5M,EAAA;EACF;IAAA6M,WAAA;IAAArK,GAAA,EAAAsK;EAAA,IAA0CH,KAAA;EAC1C;IAAA1I,cAAA;IAAAQ;EAAA,IAAuC3D,eAAA;EAEvC;IAAAmC,MAAA;IAAAA,MAAA,EAAA8J,EAAA;IAAAC;EAAA,IAOIrM,SAAA;EALM;IAAAkF,MAAA,EAAAoH,EAAA;IAAAC;EAAA,IAAAH,EAGP;EAFS;IAAAI,GAAA,EAAAC;EAAA,IAAAH,EAAiB;EAAA,IAAAI,EAAA;EAAA,IAAAT,CAAA,QAAAE,WAAA;IAO3BO,EAAA,GAAAP,WAAA,CAAAQ,UAAA,CAAuB,cAAcR,WAAA,CAAAQ,UAAA,CAAuB,cACxDR,WAAA,GACAvK,cAAA,CAAeuK,WAAA;IAAAF,CAAA,MAAAE,WAAA;IAAAF,CAAA,MAAAS,EAAA;EAAA;IAAAA,EAAA,GAAAT,CAAA;EAAA;EAHrB,MAAApK,GAAA,GACE6K,EAEmB;EAAA,IAAAE,EAAA;EAAA,IAAAX,CAAA,QAAApK,GAAA;IAE6C+K,EAAA;MAAAC,SAAA,EACrD;MAAAhL;IAAA;IAEboK,CAAA,MAAApK,GAAA;IAAAoK,CAAA,MAAAW,EAAA;EAAA;IAAAA,EAAA,GAAAX,CAAA;EAAA;EAHA;IAAAa,WAAA;IAAAC,eAAA;IAAAC;EAAA,IAAmDtL,cAAA,CAAekL,EAGlE;EAAA,IAAAK,EAAA;EAAA,IAAAhB,CAAA,QAAAQ,QAAA,IAAAR,CAAA,QAAAC,WAAA,IAAAD,CAAA,QAAA3I,cAAA,IAAA2I,CAAA,QAAA3J,MAAA,IAAA2J,CAAA,QAAAI,eAAA,IAAAJ,CAAA,QAAAnI,UAAA,IAAAmI,CAAA,SAAAa,WAAA,IAAAb,CAAA,SAAAc,eAAA,IAAAd,CAAA,SAAAe,QAAA,IAAAf,CAAA,SAAAD,KAAA,CAAA5J,sBAAA,IAAA6J,CAAA,SAAAD,KAAA,CAAAzJ,WAAA,IAAA0J,CAAA,SAAAD,KAAA,CAAAxJ,aAAA,IAAAyJ,CAAA,SAAAD,KAAA,CAAArJ,aAAA,IAAAsJ,CAAA,SAAAD,KAAA,CAAApJ,aAAA,IAAAqJ,CAAA,SAAAD,KAAA,CAAAnJ,UAAA,IAAAoJ,CAAA,SAAAD,KAAA,CAAAlJ,eAAA,IAAAmJ,CAAA,SAAAD,KAAA,CAAAkB,MAAA,IAAAjB,CAAA,SAAAM,SAAA,IAAAN,CAAA,SAAApK,GAAA;IAEA,MAAAQ,gBAAA,GAAyBgK,eAAA;MAAA/I;IAAA,CAAiC;IAE1D,MAAAZ,YAAA,GAAqB2J,eAAA;MAAAvI;IAAA,CAA6B;IAElD,MAAAf,UAAA,GAAmBO,cAAA,IAAkBQ,UAAA;IAGnCmJ,EAAA,GAAA5C,IAAA,CAAAnJ,QAAA;MAAAiM,QAAA,EACE9C,IAAA,CAAA7I,mBAAA;QAAA0K,WAAA;QAAAkB,WAAA,EAEe/K,gBAAA,EAAAI,MAAA,IAA4BC,YAAA,EAAAD,MAAc;QAAAqK,WAAA;QAAAC,eAAA;QAAAC,QAAA;QAAAnL,GAAA;QAAAsL,QAAA,EAMvD9C,IAAA,CAAAlI,WAAA;UAAAsK,QAAA;UAAArK,sBAAA,EAE0B4J,KAAA,CAAA5J,sBAAA;UAAAC,gBAAA;UAAAC,MAAA;UAAAC,WAAA,EAGXyJ,KAAA,CAAAzJ,WAAA;UAAAC,aAAA,EACEwJ,KAAA,CAAAxJ,aAAA;UAAAC,MAAA,GACNJ,gBAAA,IAAoBK,YAAW,GAAAD,MAAA;UAAAC,YAAA;UAAAC,aAAA,EAEzBqJ,KAAA,CAAArJ,aAAA;UAAAC,aAAA,EACAoJ,KAAA,CAAApJ,aAAA;UAAAC,UAAA,EACHmJ,KAAA,CAAAnJ,UAAA;UAAAC,eAAA,EACKkJ,KAAA,CAAAlJ,eAAA;UAAAC,UAAA;UAAAwJ,SAAA;UAAAW,MAAA,EAGTlB,KAAA,CAAAkB;QAAA,C;;;;;;;;;;;;;;;;;;;;;;;;;;SAxBdD,E;CA6BJ","ignoreList":[]}