{"version":3,"file":"index.js","names":["c","_c","getTranslation","formatAdminURL","React","Fragment","useEffect","useFormInitializing","useFormProcessing","useConfig","useEditDepth","useTranslation","formatDate","Autosave","Button","CopyLocaleData","DeleteDocument","DuplicateDocument","MoveDocToFolder","Gutter","Locked","Popup","PopupList","PreviewButton","PublishButton","RenderCustomComponent","SaveButton","SaveDraftButton","Status","baseClass","DocumentControls","props","$","id","slug","BeforeDocumentControls","customComponents","t0","data","disableActions","disableCreate","EditMenuItems","hasSavePermission","isAccountView","isEditing","onDelete","onDrawerCreateNew","onDuplicate","onTakeOver","permissions","readOnlyForIncomingUser","redirectAfterDelete","redirectAfterDuplicate","user","t1","undefined","CustomPreviewButton","CustomPublishButton","CustomSaveButton","CustomSaveDraftButton","i18n","t","editDepth","config","getEntityConfig","collectionConfig","collectionSlug","globalConfig","globalSlug","admin","t2","localization","routes","t3","dateFormat","adminRoute","updatedAt","setUpdatedAt","useState","createdAt","setCreatedAt","processing","initializing","t4","t5","date","pattern","hasCreatePermission","create","hasDeletePermission","delete","showDotMenu","Boolean","unsavedDraftWithValidations","versions","drafts","validate","collectionConfigDrafts","globalConfigDrafts","autosaveEnabled","autosave","collectionAutosaveEnabled","globalAutosaveEnabled","showSaveDraftButton","showCopyToLocale","disableCopyToLocale","showFolderMetaIcon","folders","showLockedMetaIcon","t6","_jsx","buttonStyle","onClick","size","type","children","_jsxs","className","folderCollectionSlug","folderFieldName","fieldName","label","labels","singular","filter","join","collection","global","publishedDocUpdatedAt","timestamps","title","preview","CustomComponent","Fallback","button","disabled","horizontalAlign","verticalAlign","ButtonGroup","href","path","disableDuplicate","toString","singularLabel","buttonId","useAsTitle"],"sources":["../../../src/elements/DocumentControls/index.tsx"],"sourcesContent":["'use client'\nimport type {\n  ClientUser,\n  Data,\n  SanitizedCollectionConfig,\n  SanitizedCollectionPermission,\n  SanitizedGlobalPermission,\n} from 'payload'\n\nimport { getTranslation } from '@payloadcms/translations'\nimport { formatAdminURL } from 'payload/shared'\nimport React, { Fragment, useEffect } from 'react'\n\nimport type { DocumentDrawerContextType } from '../DocumentDrawer/Provider.js'\n\nimport { useFormInitializing, useFormProcessing } from '../../forms/Form/context.js'\nimport { useConfig } from '../../providers/Config/index.js'\nimport { useEditDepth } from '../../providers/EditDepth/index.js'\nimport { useTranslation } from '../../providers/Translation/index.js'\nimport { formatDate } from '../../utilities/formatDocTitle/formatDateTitle.js'\nimport { Autosave } from '../Autosave/index.js'\nimport { Button } from '../Button/index.js'\nimport { CopyLocaleData } from '../CopyLocaleData/index.js'\nimport { DeleteDocument } from '../DeleteDocument/index.js'\nimport { DuplicateDocument } from '../DuplicateDocument/index.js'\nimport { MoveDocToFolder } from '../FolderView/MoveDocToFolder/index.js'\nimport { Gutter } from '../Gutter/index.js'\nimport { Locked } from '../Locked/index.js'\nimport { Popup, PopupList } from '../Popup/index.js'\nimport { PreviewButton } from '../PreviewButton/index.js'\nimport { PublishButton } from '../PublishButton/index.js'\nimport { RenderCustomComponent } from '../RenderCustomComponent/index.js'\nimport { SaveButton } from '../SaveButton/index.js'\nimport { SaveDraftButton } from '../SaveDraftButton/index.js'\nimport { Status } from '../Status/index.js'\nimport './index.scss'\n\nconst baseClass = 'doc-controls'\n\nexport const DocumentControls: React.FC<{\n  readonly apiURL: string\n  readonly BeforeDocumentControls?: React.ReactNode\n  readonly customComponents?: {\n    readonly PreviewButton?: React.ReactNode\n    readonly PublishButton?: React.ReactNode\n    readonly SaveButton?: React.ReactNode\n    readonly SaveDraftButton?: React.ReactNode\n  }\n  readonly data?: Data\n  readonly disableActions?: boolean\n  readonly disableCreate?: boolean\n  readonly EditMenuItems?: React.ReactNode\n  readonly hasPublishPermission?: boolean\n  readonly hasSavePermission?: boolean\n  readonly id?: number | string\n  readonly isAccountView?: boolean\n  readonly isEditing?: boolean\n  readonly onDelete?: DocumentDrawerContextType['onDelete']\n  readonly onDrawerCreateNew?: () => void\n  /* Only available if `redirectAfterDuplicate` is `false` */\n  readonly onDuplicate?: DocumentDrawerContextType['onDuplicate']\n  readonly onSave?: DocumentDrawerContextType['onSave']\n  readonly onTakeOver?: () => void\n  readonly permissions: null | SanitizedCollectionPermission | SanitizedGlobalPermission\n  readonly readOnlyForIncomingUser?: boolean\n  readonly redirectAfterDelete?: boolean\n  readonly redirectAfterDuplicate?: boolean\n  readonly slug: SanitizedCollectionConfig['slug']\n  readonly user?: ClientUser\n}> = (props) => {\n  const {\n    id,\n    slug,\n    BeforeDocumentControls,\n    customComponents: {\n      PreviewButton: CustomPreviewButton,\n      PublishButton: CustomPublishButton,\n      SaveButton: CustomSaveButton,\n      SaveDraftButton: CustomSaveDraftButton,\n    } = {},\n    data,\n    disableActions,\n    disableCreate,\n    EditMenuItems,\n    hasSavePermission,\n    isAccountView,\n    isEditing,\n    onDelete,\n    onDrawerCreateNew,\n    onDuplicate,\n    onTakeOver,\n    permissions,\n    readOnlyForIncomingUser,\n    redirectAfterDelete,\n    redirectAfterDuplicate,\n    user,\n  } = props\n\n  const { i18n, t } = useTranslation()\n\n  const editDepth = useEditDepth()\n\n  const { config, getEntityConfig } = useConfig()\n\n  const collectionConfig = getEntityConfig({ collectionSlug: slug })\n\n  const globalConfig = getEntityConfig({ globalSlug: slug })\n\n  const {\n    admin: { dateFormat },\n    localization,\n    routes: { admin: adminRoute },\n  } = config\n\n  // Settings these in state to avoid hydration issues if there is a mismatch between the server and client\n  const [updatedAt, setUpdatedAt] = React.useState<string>('')\n  const [createdAt, setCreatedAt] = React.useState<string>('')\n\n  const processing = useFormProcessing()\n  const initializing = useFormInitializing()\n\n  useEffect(() => {\n    if (data?.updatedAt) {\n      setUpdatedAt(formatDate({ date: data.updatedAt, i18n, pattern: dateFormat }))\n    }\n    if (data?.createdAt) {\n      setCreatedAt(formatDate({ date: data.createdAt, i18n, pattern: dateFormat }))\n    }\n  }, [data, i18n, dateFormat])\n\n  const hasCreatePermission = permissions && 'create' in permissions && permissions.create\n\n  const hasDeletePermission = permissions && 'delete' in permissions && permissions.delete\n\n  const showDotMenu = Boolean(\n    collectionConfig && id && !disableActions && (hasCreatePermission || hasDeletePermission),\n  )\n\n  const unsavedDraftWithValidations =\n    !id && collectionConfig?.versions?.drafts && collectionConfig.versions?.drafts.validate\n\n  const collectionConfigDrafts = collectionConfig?.versions?.drafts\n  const globalConfigDrafts = globalConfig?.versions?.drafts\n\n  const autosaveEnabled =\n    (collectionConfigDrafts && collectionConfigDrafts?.autosave) ||\n    (globalConfigDrafts && globalConfigDrafts?.autosave)\n\n  const collectionAutosaveEnabled = collectionConfigDrafts && collectionConfigDrafts?.autosave\n  const globalAutosaveEnabled = globalConfigDrafts && globalConfigDrafts?.autosave\n\n  const showSaveDraftButton =\n    (collectionAutosaveEnabled &&\n      collectionConfigDrafts.autosave !== false &&\n      collectionConfigDrafts.autosave.showSaveDraftButton === true) ||\n    (globalAutosaveEnabled &&\n      globalConfigDrafts.autosave !== false &&\n      globalConfigDrafts.autosave.showSaveDraftButton === true)\n\n  const showCopyToLocale = localization && !collectionConfig?.admin?.disableCopyToLocale\n\n  const showFolderMetaIcon = collectionConfig && collectionConfig.folders\n  const showLockedMetaIcon = user && readOnlyForIncomingUser\n\n  return (\n    <Gutter className={baseClass}>\n      <div className={`${baseClass}__wrapper`}>\n        <div className={`${baseClass}__content`}>\n          {showLockedMetaIcon || showFolderMetaIcon ? (\n            <div className={`${baseClass}__meta-icons`}>\n              {showLockedMetaIcon && (\n                <Locked className={`${baseClass}__locked-controls`} user={user} />\n              )}\n              {showFolderMetaIcon && config.folders && (\n                <MoveDocToFolder\n                  folderCollectionSlug={config.folders.slug}\n                  folderFieldName={config.folders.fieldName}\n                />\n              )}\n            </div>\n          ) : null}\n\n          <ul className={`${baseClass}__meta`}>\n            {collectionConfig && !isEditing && !isAccountView && (\n              <li className={`${baseClass}__list-item`}>\n                <p className={`${baseClass}__value`}>\n                  {i18n.t('general:creatingNewLabel', {\n                    label: getTranslation(\n                      collectionConfig?.labels?.singular ?? i18n.t('general:document'),\n                      i18n,\n                    ),\n                  })}\n                </p>\n              </li>\n            )}\n\n            {(collectionConfig?.versions?.drafts || globalConfig?.versions?.drafts) && (\n              <Fragment>\n                {(globalConfig || (collectionConfig && isEditing)) && (\n                  <li\n                    className={[`${baseClass}__status`, `${baseClass}__list-item`]\n                      .filter(Boolean)\n                      .join(' ')}\n                  >\n                    <Status />\n                  </li>\n                )}\n                {hasSavePermission && autosaveEnabled && !unsavedDraftWithValidations && (\n                  <li className={`${baseClass}__list-item`}>\n                    <Autosave\n                      collection={collectionConfig}\n                      global={globalConfig}\n                      id={id}\n                      publishedDocUpdatedAt={data?.createdAt}\n                    />\n                  </li>\n                )}\n              </Fragment>\n            )}\n            {collectionConfig?.timestamps && (isEditing || isAccountView) && (\n              <Fragment>\n                <li\n                  className={[`${baseClass}__list-item`, `${baseClass}__value-wrap`]\n                    .filter(Boolean)\n                    .join(' ')}\n                  title={data?.updatedAt ? updatedAt : ''}\n                >\n                  <p className={`${baseClass}__label`}>{i18n.t('general:lastModified')}:&nbsp;</p>\n                  {data?.updatedAt && <p className={`${baseClass}__value`}>{updatedAt}</p>}\n                </li>\n                <li\n                  className={[`${baseClass}__list-item`, `${baseClass}__value-wrap`]\n                    .filter(Boolean)\n                    .join(' ')}\n                  title={data?.createdAt ? createdAt : ''}\n                >\n                  <p className={`${baseClass}__label`}>{i18n.t('general:created')}:&nbsp;</p>\n                  {data?.createdAt && <p className={`${baseClass}__value`}>{createdAt}</p>}\n                </li>\n              </Fragment>\n            )}\n          </ul>\n        </div>\n        <div className={`${baseClass}__controls-wrapper`}>\n          <div className={`${baseClass}__controls`}>\n            {BeforeDocumentControls}\n            {(collectionConfig?.admin.preview || globalConfig?.admin.preview) && (\n              <RenderCustomComponent\n                CustomComponent={CustomPreviewButton}\n                Fallback={<PreviewButton />}\n              />\n            )}\n            {hasSavePermission && (\n              <Fragment>\n                {collectionConfig?.versions?.drafts || globalConfig?.versions?.drafts ? (\n                  <Fragment>\n                    {(unsavedDraftWithValidations ||\n                      !autosaveEnabled ||\n                      (autosaveEnabled && showSaveDraftButton)) && (\n                      <RenderCustomComponent\n                        CustomComponent={CustomSaveDraftButton}\n                        Fallback={<SaveDraftButton />}\n                      />\n                    )}\n                    <RenderCustomComponent\n                      CustomComponent={CustomPublishButton}\n                      Fallback={<PublishButton />}\n                    />\n                  </Fragment>\n                ) : (\n                  <RenderCustomComponent\n                    CustomComponent={CustomSaveButton}\n                    Fallback={<SaveButton />}\n                  />\n                )}\n              </Fragment>\n            )}\n            {user && readOnlyForIncomingUser && (\n              <Button\n                buttonStyle=\"secondary\"\n                id=\"take-over\"\n                onClick={onTakeOver}\n                size=\"medium\"\n                type=\"button\"\n              >\n                {t('general:takeOver')}\n              </Button>\n            )}\n          </div>\n          {showDotMenu && !readOnlyForIncomingUser && (\n            <Popup\n              button={\n                <div className={`${baseClass}__dots`}>\n                  <div />\n                  <div />\n                  <div />\n                </div>\n              }\n              className={`${baseClass}__popup`}\n              disabled={initializing || processing}\n              horizontalAlign=\"right\"\n              size=\"large\"\n              verticalAlign=\"bottom\"\n            >\n              <PopupList.ButtonGroup>\n                {showCopyToLocale && <CopyLocaleData />}\n                {hasCreatePermission && (\n                  <React.Fragment>\n                    {!disableCreate && (\n                      <Fragment>\n                        {editDepth > 1 ? (\n                          <PopupList.Button id=\"action-create\" onClick={onDrawerCreateNew}>\n                            {i18n.t('general:createNew')}\n                          </PopupList.Button>\n                        ) : (\n                          <PopupList.Button\n                            href={formatAdminURL({\n                              adminRoute,\n                              path: `/collections/${collectionConfig?.slug}/create`,\n                            })}\n                            id=\"action-create\"\n                          >\n                            {i18n.t('general:createNew')}\n                          </PopupList.Button>\n                        )}\n                      </Fragment>\n                    )}\n                    {collectionConfig.disableDuplicate !== true && isEditing && (\n                      <DuplicateDocument\n                        id={id.toString()}\n                        onDuplicate={onDuplicate}\n                        redirectAfterDuplicate={redirectAfterDuplicate}\n                        singularLabel={collectionConfig?.labels?.singular}\n                        slug={collectionConfig?.slug}\n                      />\n                    )}\n                  </React.Fragment>\n                )}\n                {hasDeletePermission && (\n                  <DeleteDocument\n                    buttonId=\"action-delete\"\n                    collectionSlug={collectionConfig?.slug}\n                    id={id.toString()}\n                    onDelete={onDelete}\n                    redirectAfterDelete={redirectAfterDelete}\n                    singularLabel={collectionConfig?.labels?.singular}\n                    useAsTitle={collectionConfig?.admin?.useAsTitle}\n                  />\n                )}\n                {EditMenuItems}\n              </PopupList.ButtonGroup>\n            </Popup>\n          )}\n        </div>\n      </div>\n      <div className={`${baseClass}__divider`} />\n    </Gutter>\n  )\n}\n"],"mappings":"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","ignoreList":[]}