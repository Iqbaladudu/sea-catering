{"version":3,"file":"index.js","names":["useRouter","useSearchParams","formatAdminURL","React","useCallback","useEffect","Form","useForm","WatchChildErrors","useConfig","useDocumentEvents","useDocumentInfo","useEditDepth","OperationProvider","useRouteTransition","useServerFunctions","abortAndIgnore","handleAbortRef","useDocumentDrawerContext","DocumentFields","MoveDocToFolder","Upload_v4","useFormsManager","BulkUploadProvider","baseClass","EditForm","resetUploadEdits","submitted","updateUploadEdits","uploadEdits","action","collectionSlug","docSlug","docPermissions","getDocPreferences","hasSavePermission","initialState","isEditing","isInitializing","Upload","CustomUpload","onSave","onSaveFromContext","getFormState","config","folders","routes","admin","adminRoute","getEntityConfig","abortOnChangeRef","useRef","collectionConfig","router","depth","params","reportUpdate","startRouteTransition","locale","get","slug","schemaPath","useState","json","entitySlug","updatedAt","result","Date","toISOString","operation","redirectRoute","path","doc","id","push","onChange","formState","prevFormState","controller","docPreferences","state","newFormState","signal","skipValidation","current","abortOnChange","_jsx","_jsxs","className","disabled","undefined","method","onSuccess","BeforeFields","Fragment","customActions","buttonProps","buttonStyle","size","folderCollectionSlug","folderFieldName","fieldName","filter","Boolean","uploadConfig","upload","fields","schemaPathSegments","ReportAllErrors","GetFieldProxy","getFields","getFormDataRef","docConfig","activeIndex","setFormTotalErrorCount","errorCountRef","reportFormErrorCount","errorCount","index","setErrorCount"],"sources":["../../../../src/elements/BulkUpload/EditForm/index.tsx"],"sourcesContent":["'use client'\n\nimport { useRouter, useSearchParams } from 'next/navigation.js'\nimport { formatAdminURL } from 'payload/shared'\nimport React, { useCallback, useEffect } from 'react'\n\nimport type { EditFormProps } from './types.js'\n\nimport { Form, useForm } from '../../../forms/Form/index.js'\nimport { type FormProps } from '../../../forms/Form/types.js'\nimport { WatchChildErrors } from '../../../forms/WatchChildErrors/index.js'\nimport { useConfig } from '../../../providers/Config/index.js'\nimport { useDocumentEvents } from '../../../providers/DocumentEvents/index.js'\nimport { useDocumentInfo } from '../../../providers/DocumentInfo/index.js'\nimport { useEditDepth } from '../../../providers/EditDepth/index.js'\nimport { OperationProvider } from '../../../providers/Operation/index.js'\nimport { useRouteTransition } from '../../../providers/RouteTransition/index.js'\nimport { useServerFunctions } from '../../../providers/ServerFunctions/index.js'\nimport { abortAndIgnore, handleAbortRef } from '../../../utilities/abortAndIgnore.js'\nimport { useDocumentDrawerContext } from '../../DocumentDrawer/Provider.js'\nimport { DocumentFields } from '../../DocumentFields/index.js'\nimport { MoveDocToFolder } from '../../FolderView/MoveDocToFolder/index.js'\nimport { Upload_v4 } from '../../Upload/index.js'\nimport { useFormsManager } from '../FormsManager/index.js'\nimport './index.scss'\nimport { BulkUploadProvider } from '../index.js'\n\nconst baseClass = 'collection-edit'\n\n// This component receives props only on _pages_\n// When rendered within a drawer, props are empty\n// This is solely to support custom edit views which get server-rendered\n\nexport function EditForm({\n  resetUploadEdits,\n  submitted,\n  updateUploadEdits,\n  uploadEdits,\n}: EditFormProps) {\n  const {\n    action,\n    collectionSlug: docSlug,\n    docPermissions,\n    getDocPreferences,\n    hasSavePermission,\n    initialState,\n    isEditing,\n    isInitializing,\n    Upload: CustomUpload,\n  } = useDocumentInfo()\n\n  const { onSave: onSaveFromContext } = useDocumentDrawerContext()\n\n  const { getFormState } = useServerFunctions()\n\n  const {\n    config: {\n      folders,\n      routes: { admin: adminRoute },\n    },\n    getEntityConfig,\n  } = useConfig()\n\n  const abortOnChangeRef = React.useRef<AbortController>(null)\n\n  const collectionConfig = getEntityConfig({ collectionSlug: docSlug })\n  const router = useRouter()\n  const depth = useEditDepth()\n  const params = useSearchParams()\n  const { reportUpdate } = useDocumentEvents()\n  const { startRouteTransition } = useRouteTransition()\n\n  const locale = params.get('locale')\n\n  const collectionSlug = collectionConfig.slug\n\n  const [schemaPath] = React.useState(collectionSlug)\n\n  const onSave = useCallback(\n    (json) => {\n      reportUpdate({\n        entitySlug: collectionSlug,\n        updatedAt: json?.result?.updatedAt || new Date().toISOString(),\n      })\n\n      if (typeof onSaveFromContext === 'function') {\n        void onSaveFromContext({\n          ...json,\n          operation: 'create',\n        })\n      }\n\n      if (!isEditing && depth < 2) {\n        // Redirect to the same locale if it's been set\n        const redirectRoute = formatAdminURL({\n          adminRoute,\n          path: `/collections/${collectionSlug}/${json?.doc?.id}${locale ? `?locale=${locale}` : ''}`,\n        })\n\n        startRouteTransition(() => router.push(redirectRoute))\n      } else {\n        resetUploadEdits()\n      }\n    },\n    [\n      adminRoute,\n      collectionSlug,\n      depth,\n      isEditing,\n      locale,\n      onSaveFromContext,\n      reportUpdate,\n      resetUploadEdits,\n      router,\n      startRouteTransition,\n    ],\n  )\n\n  const onChange: NonNullable<FormProps['onChange']>[0] = useCallback(\n    async ({ formState: prevFormState, submitted }) => {\n      const controller = handleAbortRef(abortOnChangeRef)\n\n      const docPreferences = await getDocPreferences()\n\n      const { state: newFormState } = await getFormState({\n        collectionSlug,\n        docPermissions,\n        docPreferences,\n        formState: prevFormState,\n        operation: 'create',\n        schemaPath,\n        signal: controller.signal,\n        skipValidation: !submitted,\n      })\n\n      abortOnChangeRef.current = null\n\n      return newFormState\n    },\n    [collectionSlug, schemaPath, getDocPreferences, getFormState, docPermissions],\n  )\n\n  useEffect(() => {\n    const abortOnChange = abortOnChangeRef.current\n\n    return () => {\n      abortAndIgnore(abortOnChange)\n    }\n  }, [])\n\n  return (\n    <OperationProvider operation=\"create\">\n      <BulkUploadProvider>\n        <Form\n          action={action}\n          className={`${baseClass}__form`}\n          disabled={isInitializing || !hasSavePermission}\n          initialState={isInitializing ? undefined : initialState}\n          isInitializing={isInitializing}\n          method=\"POST\"\n          onChange={[onChange]}\n          onSuccess={onSave}\n          submitted={submitted}\n        >\n          <DocumentFields\n            BeforeFields={\n              <React.Fragment>\n                {CustomUpload || (\n                  <Upload_v4\n                    collectionSlug={collectionConfig.slug}\n                    customActions={[\n                      folders && collectionConfig.folders && (\n                        <MoveDocToFolder\n                          buttonProps={{\n                            buttonStyle: 'pill',\n                            size: 'small',\n                          }}\n                          folderCollectionSlug={folders.slug}\n                          folderFieldName={folders.fieldName}\n                          key=\"move-doc-to-folder\"\n                        />\n                      ),\n                    ].filter(Boolean)}\n                    initialState={initialState}\n                    resetUploadEdits={resetUploadEdits}\n                    updateUploadEdits={updateUploadEdits}\n                    uploadConfig={collectionConfig.upload}\n                    uploadEdits={uploadEdits}\n                  />\n                )}\n              </React.Fragment>\n            }\n            docPermissions={docPermissions}\n            fields={collectionConfig.fields}\n            schemaPathSegments={[collectionConfig.slug]}\n          />\n          <ReportAllErrors />\n          <GetFieldProxy />\n        </Form>\n      </BulkUploadProvider>\n    </OperationProvider>\n  )\n}\n\nfunction GetFieldProxy() {\n  const { getFields } = useForm()\n  const { getFormDataRef } = useFormsManager()\n\n  useEffect(() => {\n    // eslint-disable-next-line react-compiler/react-compiler -- TODO: fix\n    getFormDataRef.current = getFields\n  }, [getFields, getFormDataRef])\n\n  return null\n}\n\nfunction ReportAllErrors() {\n  const { docConfig } = useDocumentInfo()\n  const { activeIndex, setFormTotalErrorCount } = useFormsManager()\n  const errorCountRef = React.useRef(0)\n\n  const reportFormErrorCount = React.useCallback(\n    (errorCount) => {\n      if (errorCount === errorCountRef.current) {\n        return\n      }\n      setFormTotalErrorCount({ errorCount, index: activeIndex })\n      errorCountRef.current = errorCount\n    },\n    [activeIndex, setFormTotalErrorCount],\n  )\n\n  if (!docConfig) {\n    return null\n  }\n\n  return (\n    <WatchChildErrors fields={docConfig.fields} path={[]} setErrorCount={reportFormErrorCount} />\n  )\n}\n"],"mappings":"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","ignoreList":[]}