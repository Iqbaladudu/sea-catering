{"version":3,"file":"index.js","names":["c","_c","Drawer","LoadingOverlay","toast","useEditDepth","useModal","useServerFunctions","useTranslation","useSearchParams","React","useCallback","useEffect","useId","useMemo","useRef","useState","baseClass","formatVersionDrawerSlug","depth","uuid","VersionDrawerContent","props","collectionSlug","docID","drawerSlug","closeModal","searchParams","prevSearchParams","renderDocument","DocumentView","setDocumentView","undefined","isLoading","setIsLoading","hasRenderedDocument","t","getDocumentView","fetchDocumentView","result","paramsOverride","segments","String","redirectAfterDelete","redirectAfterDuplicate","Object","fromEntries","entries","versions","disableGutter","useVersionDrawerCreatedAtCell","Document","error","message","current","_jsx","VersionDrawer","$","t0","className","gutter","slug","title","children","useVersionDrawer","drawerDepth","modalState","openModal","toggleModal","isOpen","setIsOpen","t1","t2","t3","Boolean","t4","toggleDrawer","t5","closeDrawer","t6","openDrawer","t7","t8","MemoizedDrawer","t9","t10","isDrawerOpen"],"sources":["../../../../../src/views/Version/SelectComparison/VersionDrawer/index.tsx"],"sourcesContent":["'use client'\nimport {\n  Drawer,\n  LoadingOverlay,\n  toast,\n  useEditDepth,\n  useModal,\n  useServerFunctions,\n  useTranslation,\n} from '@payloadcms/ui'\nimport { useSearchParams } from 'next/navigation.js'\n\nimport './index.scss'\n\nimport React, { useCallback, useEffect, useId, useMemo, useRef, useState } from 'react'\n\nexport const baseClass = 'version-drawer'\nexport const formatVersionDrawerSlug = ({\n  depth,\n  uuid,\n}: {\n  depth: number\n  uuid: string // supply when creating a new document and no id is available\n}) => `version-drawer_${depth}_${uuid}`\n\nexport const VersionDrawerContent: React.FC<{\n  collectionSlug: string\n  docID: number | string\n  drawerSlug: string\n}> = (props) => {\n  const { collectionSlug, docID, drawerSlug } = props\n  const { closeModal } = useModal()\n  const searchParams = useSearchParams()\n  const prevSearchParams = useRef(searchParams)\n\n  const { renderDocument } = useServerFunctions()\n\n  const [DocumentView, setDocumentView] = useState<React.ReactNode>(undefined)\n  const [isLoading, setIsLoading] = useState(true)\n  const hasRenderedDocument = useRef(false)\n  const { t } = useTranslation()\n\n  const getDocumentView = useCallback(\n    (docID?: number | string) => {\n      const fetchDocumentView = async () => {\n        setIsLoading(true)\n\n        try {\n          const result = await renderDocument({\n            collectionSlug,\n            docID,\n            drawerSlug,\n            paramsOverride: {\n              segments: ['collections', collectionSlug, String(docID), 'versions'],\n            },\n            redirectAfterDelete: false,\n            redirectAfterDuplicate: false,\n            searchParams: Object.fromEntries(searchParams.entries()),\n            versions: {\n              disableGutter: true,\n              useVersionDrawerCreatedAtCell: true,\n            },\n          })\n\n          if (result?.Document) {\n            setDocumentView(result.Document)\n            setIsLoading(false)\n          }\n        } catch (error) {\n          toast.error(error?.message || t('error:unspecific'))\n          closeModal(drawerSlug)\n          // toast.error(data?.errors?.[0].message || t('error:unspecific'))\n        }\n      }\n\n      void fetchDocumentView()\n    },\n    [closeModal, collectionSlug, drawerSlug, renderDocument, searchParams, t],\n  )\n\n  useEffect(() => {\n    if (!hasRenderedDocument.current || prevSearchParams.current !== searchParams) {\n      prevSearchParams.current = searchParams\n      getDocumentView(docID)\n      hasRenderedDocument.current = true\n    }\n  }, [docID, getDocumentView, searchParams])\n\n  if (isLoading) {\n    return <LoadingOverlay />\n  }\n\n  return DocumentView\n}\nexport const VersionDrawer: React.FC<{\n  collectionSlug: string\n  docID: number | string\n  drawerSlug: string\n}> = (props) => {\n  const { collectionSlug, docID, drawerSlug } = props\n  const { t } = useTranslation()\n\n  return (\n    <Drawer\n      className={baseClass}\n      gutter={true}\n      slug={drawerSlug}\n      title={t('version:selectVersionToCompare')}\n    >\n      <VersionDrawerContent collectionSlug={collectionSlug} docID={docID} drawerSlug={drawerSlug} />\n    </Drawer>\n  )\n}\n\nexport const useVersionDrawer = ({\n  collectionSlug,\n  docID,\n}: {\n  collectionSlug: string\n  docID: number | string\n}) => {\n  const drawerDepth = useEditDepth()\n  const uuid = useId()\n  const { closeModal, modalState, openModal, toggleModal } = useModal()\n  const [isOpen, setIsOpen] = useState(false)\n\n  const drawerSlug = formatVersionDrawerSlug({\n    depth: drawerDepth,\n    uuid,\n  })\n\n  useEffect(() => {\n    setIsOpen(Boolean(modalState[drawerSlug]?.isOpen))\n  }, [modalState, drawerSlug])\n\n  const toggleDrawer = useCallback(() => {\n    toggleModal(drawerSlug)\n  }, [toggleModal, drawerSlug])\n\n  const closeDrawer = useCallback(() => {\n    closeModal(drawerSlug)\n  }, [drawerSlug, closeModal])\n\n  const openDrawer = useCallback(() => {\n    openModal(drawerSlug)\n  }, [drawerSlug, openModal])\n\n  const MemoizedDrawer = useMemo(() => {\n    return () => (\n      <VersionDrawer collectionSlug={collectionSlug} docID={docID} drawerSlug={drawerSlug} />\n    )\n  }, [collectionSlug, docID, drawerSlug])\n\n  return useMemo(\n    () => ({\n      closeDrawer,\n      Drawer: MemoizedDrawer,\n      drawerDepth,\n      drawerSlug,\n      isDrawerOpen: isOpen,\n      openDrawer,\n      toggleDrawer,\n    }),\n    [MemoizedDrawer, closeDrawer, drawerDepth, drawerSlug, isOpen, openDrawer, toggleDrawer],\n  )\n}\n"],"mappings":"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","ignoreList":[]}